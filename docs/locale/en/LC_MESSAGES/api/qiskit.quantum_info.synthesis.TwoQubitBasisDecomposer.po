# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Qiskit Development Team
# This file is distributed under the same license as the Qiskit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Qiskit \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-08-26 21:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../api/qiskit.quantum_info.synthesis.TwoQubitBasisDecomposer.rst:2
msgid "TwoQubitBasisDecomposer"
msgstr ""

#: of qiskit.quantum_info.synthesis.TwoQubitBasisDecomposer:1
msgid "ベースクラス: :class:`object`"
msgstr ""

#: of qiskit.quantum_info.synthesis.TwoQubitBasisDecomposer:1
msgid ""
"A class for decomposing 2-qubit unitaries into minimal number of uses of "
"a 2-qubit basis gate."
msgstr ""

#: ../../api/qiskit.quantum_info.synthesis.TwoQubitBasisDecomposer.rst:10
msgid "Methods Summary"
msgstr ""

#: ../../api/qiskit.quantum_info.synthesis.TwoQubitBasisDecomposer.rst:20:<autosummary>:1
msgid ""
":obj:`__call__ "
"<qiskit.quantum_info.synthesis.TwoQubitBasisDecomposer.__call__>`\\ "
"\\(target\\[\\, basis\\_fidelity\\]\\)"
msgstr ""

#: ../../api/qiskit.quantum_info.synthesis.TwoQubitBasisDecomposer.rst:20:<autosummary>:1
#: of qiskit.quantum_info.synthesis.TwoQubitBasisDecomposer.__call__:1
msgid ""
"Decompose a two-qubit unitary over fixed basis + SU(2) using the best "
"approximation given that each basis application has a finite fidelity."
msgstr ""

#: ../../api/qiskit.quantum_info.synthesis.TwoQubitBasisDecomposer.rst:20:<autosummary>:1
msgid ""
":obj:`decomp0 "
"<qiskit.quantum_info.synthesis.TwoQubitBasisDecomposer.decomp0>`\\ "
"\\(target\\)"
msgstr ""

#: ../../api/qiskit.quantum_info.synthesis.TwoQubitBasisDecomposer.rst:20:<autosummary>:1
msgid "Decompose target ~Ud(x, y, z) with 0 uses of the basis gate."
msgstr ""

#: ../../api/qiskit.quantum_info.synthesis.TwoQubitBasisDecomposer.rst:20:<autosummary>:1
msgid ""
":obj:`decomp1 "
"<qiskit.quantum_info.synthesis.TwoQubitBasisDecomposer.decomp1>`\\ "
"\\(target\\)"
msgstr ""

#: ../../api/qiskit.quantum_info.synthesis.TwoQubitBasisDecomposer.rst:20:<autosummary>:1
msgid "Decompose target ~Ud(x, y, z) with 1 uses of the basis gate ~Ud(a, b, c)."
msgstr ""

#: ../../api/qiskit.quantum_info.synthesis.TwoQubitBasisDecomposer.rst:20:<autosummary>:1
msgid ""
":obj:`decomp2_supercontrolled "
"<qiskit.quantum_info.synthesis.TwoQubitBasisDecomposer.decomp2_supercontrolled>`\\"
" \\(target\\)"
msgstr ""

#: ../../api/qiskit.quantum_info.synthesis.TwoQubitBasisDecomposer.rst:20:<autosummary>:1
msgid "Decompose target ~Ud(x, y, z) with 2 uses of the basis gate."
msgstr ""

#: ../../api/qiskit.quantum_info.synthesis.TwoQubitBasisDecomposer.rst:20:<autosummary>:1
msgid ""
":obj:`decomp3_supercontrolled "
"<qiskit.quantum_info.synthesis.TwoQubitBasisDecomposer.decomp3_supercontrolled>`\\"
" \\(target\\)"
msgstr ""

#: ../../api/qiskit.quantum_info.synthesis.TwoQubitBasisDecomposer.rst:20:<autosummary>:1
msgid "Decompose target with 3 uses of the basis."
msgstr ""

#: ../../api/qiskit.quantum_info.synthesis.TwoQubitBasisDecomposer.rst:20:<autosummary>:1
msgid ""
":obj:`num_basis_gates "
"<qiskit.quantum_info.synthesis.TwoQubitBasisDecomposer.num_basis_gates>`\\"
" \\(unitary\\)"
msgstr ""

#: ../../api/qiskit.quantum_info.synthesis.TwoQubitBasisDecomposer.rst:20:<autosummary>:1
#: of qiskit.quantum_info.synthesis.TwoQubitBasisDecomposer.num_basis_gates:1
msgid ""
"Computes the number of basis gates needed in a decomposition of input "
"unitary"
msgstr ""

#: ../../api/qiskit.quantum_info.synthesis.TwoQubitBasisDecomposer.rst:20:<autosummary>:1
msgid ""
":obj:`traces "
"<qiskit.quantum_info.synthesis.TwoQubitBasisDecomposer.traces>`\\ "
"\\(target\\)"
msgstr ""

#: ../../api/qiskit.quantum_info.synthesis.TwoQubitBasisDecomposer.rst:20:<autosummary>:1
#: of qiskit.quantum_info.synthesis.TwoQubitBasisDecomposer.traces:1
msgid ""
"Give the expected traces |Tr(U.Utarget^dag)| for different number of "
"basis gates"
msgstr ""

#: ../../api/qiskit.quantum_info.synthesis.TwoQubitBasisDecomposer.rst:22
msgid "Methods Documentation"
msgstr ""

#: of qiskit.quantum_info.synthesis.TwoQubitBasisDecomposer.decomp0:1
msgid ""
"Decompose target ~Ud(x, y, z) with 0 uses of the basis gate. Result Ur "
"has trace: |Tr(Ur.Utarget^dag)| = 4|(cos(x)cos(y)cos(z)+ j "
"sin(x)sin(y)sin(z)|, which is optimal for all targets and bases"
msgstr ""

#: of qiskit.quantum_info.synthesis.TwoQubitBasisDecomposer.decomp1:1
msgid ""
"Decompose target ~Ud(x, y, z) with 1 uses of the basis gate ~Ud(a, b, c)."
" Result Ur has trace: |Tr(Ur.Utarget^dag)| = 4|cos(x-a)cos(y-b)cos(z-c) +"
" j sin(x-a)sin(y-b)sin(z-c)|, which is optimal for all targets and bases "
"with z==0 or c==0"
msgstr ""

#: of
#: qiskit.quantum_info.synthesis.TwoQubitBasisDecomposer.decomp2_supercontrolled:1
msgid ""
"Decompose target ~Ud(x, y, z) with 2 uses of the basis gate. For "
"supercontrolled basis ~Ud(pi/4, b, 0), all b, result Ur has trace: "
"|Tr(Ur.Utarget^dag)| = 4cos(z) which is the optimal approximation for "
"basis of CNOT-class ~Ud(pi/4, 0, 0) or DCNOT-class ~Ud(pi/4, pi/4, 0) and"
" any target. May be sub-optimal for b!=0 (e.g. there exists exact "
"decomposition for any target using B"
msgstr ""

#: of
#: qiskit.quantum_info.synthesis.TwoQubitBasisDecomposer.decomp2_supercontrolled:7
msgid "B~Ud(pi/4, pi/8, 0), but not this decomposition.)"
msgstr ""

#: of
#: qiskit.quantum_info.synthesis.TwoQubitBasisDecomposer.decomp2_supercontrolled:8
msgid ""
"This is an exact decomposition for supercontrolled basis and target "
"~Ud(x, y, 0). No guarantees for non-supercontrolled basis."
msgstr ""

#: of
#: qiskit.quantum_info.synthesis.TwoQubitBasisDecomposer.decomp3_supercontrolled:1
msgid ""
"Decompose target with 3 uses of the basis. This is an exact decomposition"
" for supercontrolled basis ~Ud(pi/4, b, 0), all b, and any target. No "
"guarantees for non-supercontrolled basis."
msgstr ""

