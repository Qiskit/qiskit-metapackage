# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Qiskit Development Team
# This file is distributed under the same license as the Qiskit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Qiskit \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-08-26 21:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../api/qiskit.visualization.circuit_drawer.rst:2
msgid "circuit_drawer"
msgstr ""

#: of qiskit.visualization.circuit_drawer:1
msgid ""
"Draw a quantum circuit to different formats (set by output parameter): 0."
" text: ASCII art TextDrawing that can be printed in the console. 1. "
"latex: high-quality images, but heavy external software dependencies 2. "
"matplotlib: purely in Python with no external dependencies"
msgstr ""

#: of qiskit.visualization.circuit_drawer
msgid "パラメータ"
msgstr ""

#: of qiskit.visualization.circuit_drawer:6
msgid "the quantum circuit to draw"
msgstr ""

#: of qiskit.visualization.circuit_drawer:8
msgid "scale of image to draw (shrink if < 1)"
msgstr ""

#: of qiskit.visualization.circuit_drawer:10
msgid "file path to save image to"
msgstr ""

#: of qiskit.visualization.circuit_drawer:12
msgid ""
"dictionary of style or file name of style file. This option is only used "
"by the `mpl`, `latex`, and `latex_source` output types. If a str is "
"passed in that is the path to a json file which contains that will be "
"open, parsed, and then used just as the input dict."
msgstr ""

#: of qiskit.visualization.circuit_drawer:18
msgid ""
"Select the output method to use for drawing the circuit. Valid choices "
"are `text`, `latex`, `latex_source`, `mpl`. By default the 'text' drawer "
"is used unless a user config file has an alternative backend set as the "
"default. If the output is passed in that backend will always be used."
msgstr ""

#: of qiskit.visualization.circuit_drawer:24
msgid ""
"when set true show the circuit in a new window (for `mpl` this depends on"
" the matplotlib backend being used supporting this). Note when used with "
"either the `text` or the `latex_source` output type this has no effect "
"and will be silently ignored."
msgstr ""

#: of qiskit.visualization.circuit_drawer:30
msgid ""
"Sets the length of the lines generated by `text` output type. This useful"
" when the drawing does not fit in the console. If None (default), it will"
" try to guess the console width using shutil.get_terminal_size(). "
"However, if you're running in jupyter the default line length is set to "
"80 characters. If you don't want pagination at all, set `line_length=-1`."
msgstr ""

#: of qiskit.visualization.circuit_drawer:37
msgid ""
"When set to True reverse the bit order inside registers for the output "
"visualization."
msgstr ""

#: of qiskit.visualization.circuit_drawer:40
msgid "Enable/disable drawing barriers in the output circuit. Defaults to True."
msgstr ""

#: of qiskit.visualization.circuit_drawer:43
msgid ""
"Options are `left`, `right` or `none`, if anything else is supplied it "
"defaults to left justified. It refers to where gates should be placed in "
"the output circuit if there is an option. `none` results in each gate "
"being placed in its own column. Currently only supported by text drawer."
msgstr ""

#: of qiskit.visualization.circuit_drawer:49
msgid ""
"`high`, `medium` or `low`. It merges the lines generated by `text` so the"
" drawing will take less vertical room. Default is `medium`. It is ignored"
" if output is not `text`."
msgstr ""

#: of qiskit.visualization.circuit_drawer:53
msgid "Include idle wires. Default is True."
msgstr ""

#: of qiskit.visualization.circuit_drawer:55
msgid "Include layout information, with labels on the physical layout."
msgstr ""

#: of qiskit.visualization.circuit_drawer
msgid "戻り値"
msgstr ""

#: of qiskit.visualization.circuit_drawer:59
msgid ""
"(output `latex`) an in-memory representation of the image     of the "
"circuit diagram. matplotlib.figure: (output `mpl`) a matplotlib figure "
"object for the     circuit diagram. String: (output `latex_source`). The "
"LaTeX source code. TextDrawing: (output `text`). A drawing that can be "
"printed as ascii art"
msgstr ""

#: of qiskit.visualization.circuit_drawer:61
msgid "(output `latex`) an in-memory representation of the image"
msgstr ""

#: of qiskit.visualization.circuit_drawer:62
msgid "of the circuit diagram."
msgstr ""

#: of qiskit.visualization.circuit_drawer:63
msgid "matplotlib.figure: (output `mpl`) a matplotlib figure object for the"
msgstr ""

#: of qiskit.visualization.circuit_drawer:64
msgid "circuit diagram."
msgstr ""

#: of qiskit.visualization.circuit_drawer:65
msgid ""
"String: (output `latex_source`). The LaTeX source code. TextDrawing: "
"(output `text`). A drawing that can be printed as ascii art"
msgstr ""

#: of qiskit.visualization.circuit_drawer
msgid "戻り値の型"
msgstr ""

#: of qiskit.visualization.circuit_drawer
msgid "例外"
msgstr ""

#: of qiskit.visualization.circuit_drawer:69
msgid "when an invalid output method is selected"
msgstr ""

#: of qiskit.visualization.circuit_drawer:70
msgid "when the output methods requieres non-installed libraries."
msgstr ""

#: of qiskit.visualization.circuit_drawer:74
msgid ""
"The style dict kwarg contains numerous options that define the style of "
"the output circuit visualization. While the style dict is used by the "
"`mpl`, `latex`, and `latex_source` outputs some options in that are only "
"used by the `mpl` output. These options are defined below, if it is only "
"used by the `mpl` output it is marked as such:"
msgstr ""

#: of qiskit.visualization.circuit_drawer:80
msgid "textcolor (str): The color code to use for text. Defaults to"
msgstr ""

#: of qiskit.visualization.circuit_drawer:81
#: qiskit.visualization.circuit_drawer:83
#: qiskit.visualization.circuit_drawer:85
#: qiskit.visualization.circuit_drawer:89
msgid "`'#000000'` (`mpl` only)"
msgstr ""

#: of qiskit.visualization.circuit_drawer:82
msgid "subtextcolor (str): The color code to use for subtext. Defaults to"
msgstr ""

#: of qiskit.visualization.circuit_drawer:84
msgid "linecolor (str): The color code to use for lines. Defaults to"
msgstr ""

#: of qiskit.visualization.circuit_drawer:86
msgid "creglinecolor (str): The color code to use for classical register"
msgstr ""

#: of qiskit.visualization.circuit_drawer:87
msgid "lines. Defaults to `'#778899'`(`mpl` only)"
msgstr ""

#: of qiskit.visualization.circuit_drawer:88
msgid "gatetextcolor (str): The color code to use for gate text. Defaults to"
msgstr ""

#: of qiskit.visualization.circuit_drawer:90
msgid "gatefacecolor (str): The color code to use for gates. Defaults to"
msgstr ""

#: of qiskit.visualization.circuit_drawer:91
msgid "`'#ffffff'` (`mpl` only)"
msgstr ""

#: of qiskit.visualization.circuit_drawer:92
msgid "barrierfacecolor (str): The color code to use for barriers. Defaults to"
msgstr ""

#: of qiskit.visualization.circuit_drawer:93
msgid "`'#bdbdbd'` (`mpl` only)"
msgstr ""

#: of qiskit.visualization.circuit_drawer:94
msgid "backgroundcolor (str): The color code to use for the background."
msgstr ""

#: of qiskit.visualization.circuit_drawer:95
msgid "Defaults to `'#ffffff'` (`mpl` only)"
msgstr ""

#: of qiskit.visualization.circuit_drawer:96
msgid "fontsize (int): The font size to use for text. Defaults to 13 (`mpl`"
msgstr ""

#: of qiskit.visualization.circuit_drawer:97
#: qiskit.visualization.circuit_drawer:151
#: qiskit.visualization.circuit_drawer:160
msgid "only)"
msgstr ""

#: of qiskit.visualization.circuit_drawer:98
msgid "subfontsize (int): The font size to use for subtext. Defaults to 8"
msgstr ""

#: of qiskit.visualization.circuit_drawer:99
#: qiskit.visualization.circuit_drawer:158
msgid "(`mpl` only)"
msgstr ""

#: of qiskit.visualization.circuit_drawer:121
msgid "displaytext (dict): A dictionary of the text to use for each element"
msgstr ""

#: of qiskit.visualization.circuit_drawer:101
msgid "type in the output visualization. The default values are: {"
msgstr ""

#: of qiskit.visualization.circuit_drawer:103
msgid ""
"'id': 'id', 'u0': 'U_0', 'u1': 'U_1', 'u2': 'U_2', 'u3': 'U_3', 'x': 'X',"
" 'y': 'Y', 'z': 'Z', 'h': 'H', 's': 'S', 'sdg': 'S^\\dagger', 't': 'T', "
"'tdg': 'T^\\dagger', 'rx': 'R_x', 'ry': 'R_y', 'rz': 'R_z', 'reset': "
"'\\left|0\\right\\rangle'"
msgstr ""

#: of qiskit.visualization.circuit_drawer:120
msgid ""
"} You must specify all the necessary values if using this. There is no "
"provision for passing an incomplete dict in. (`mpl` only)"
msgstr ""

#: of qiskit.visualization.circuit_drawer:146
msgid "displaycolor (dict): The color codes to use for each circuit element."
msgstr ""

#: of qiskit.visualization.circuit_drawer:124
msgid "The default values are: {"
msgstr ""

#: of qiskit.visualization.circuit_drawer:126
msgid ""
"'id': '#F0E442', 'u0': '#E7AB3B', 'u1': '#E7AB3B', 'u2': '#E7AB3B', 'u3':"
" '#E7AB3B', 'x': '#58C698', 'y': '#58C698', 'z': '#58C698', 'h': "
"'#70B7EB', 's': '#E0722D', 'sdg': '#E0722D', 't': '#E0722D', 'tdg': "
"'#E0722D', 'rx': '#ffffff', 'ry': '#ffffff', 'rz': '#ffffff', 'reset': "
"'#D188B4', 'target': '#70B7EB', 'meas': '#D188B4'"
msgstr ""

#: of qiskit.visualization.circuit_drawer:145
msgid ""
"} Also, just like  `displaytext` there is no provision for an incomplete "
"dict passed in. (`mpl` only)"
msgstr ""

#: of qiskit.visualization.circuit_drawer:148
msgid "latexdrawerstyle (bool): When set to True enable latex mode which will"
msgstr ""

#: of qiskit.visualization.circuit_drawer:149
msgid "draw gates like the `latex` output modes. (`mpl` only)"
msgstr ""

#: of qiskit.visualization.circuit_drawer:150
msgid "usepiformat (bool): When set to True use radians for output (`mpl`"
msgstr ""

#: of qiskit.visualization.circuit_drawer:152
msgid "fold (int): The number of circuit elements to fold the circuit at."
msgstr ""

#: of qiskit.visualization.circuit_drawer:153
msgid "Defaults to 20 (`mpl` only)"
msgstr ""

#: of qiskit.visualization.circuit_drawer:154
msgid ""
"cregbundle (bool): If set True bundle classical registers (`mpl` only) "
"showindex (bool): If set True draw an index. (`mpl` only) compress "
"(bool): If set True draw a compressed circuit (`mpl` only) figwidth "
"(int): The maximum width (in inches) for the output figure."
msgstr ""

#: of qiskit.visualization.circuit_drawer:159
msgid "dpi (int): The DPI to use for the output image. Defaults to 150 (`mpl`"
msgstr ""

#: of qiskit.visualization.circuit_drawer:161
msgid ""
"margin (list): `mpl` only creglinestyle (str): The style of line to use "
"for classical registers."
msgstr ""

#: of qiskit.visualization.circuit_drawer:163
msgid ""
"Choices are `'solid'`, `'doublet'`, or any valid matplotlib `linestyle` "
"kwarg value. Defaults to `doublet`(`mpl` only)"
msgstr ""

