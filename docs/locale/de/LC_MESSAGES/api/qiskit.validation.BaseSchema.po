msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-09-13 16:11+0000\n"
"PO-Revision-Date: 2019-09-16 15:00\n"
"Last-Translator: lzdanski\n"
"Language-Team: German\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Generator: crowdin.com\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Language: de\n"
"X-Crowdin-File: /poBranch/docs/locale/en/LC_MESSAGES/api/qiskit.validation.BaseSchema.po\n"
"Language: de_DE\n"

#: ../../api/qiskit.validation.BaseSchema.rst:2
msgid "BaseSchema"
msgstr ""

#: of qiskit.validation.BaseSchema:1
msgid "Bases: :class:`marshmallow.schema.Schema`"
msgstr ""

#: of qiskit.validation.BaseSchema:1
msgid "Base class for Schemas for validated Qiskit classes."
msgstr ""

#: of qiskit.validation.BaseSchema:3
msgid "Provides convenience functionality for the Qiskit common use case:"
msgstr ""

#: of qiskit.validation.BaseSchema:5
msgid "deserialization into class instances instead of dicts."
msgstr ""

#: of qiskit.validation.BaseSchema:6
msgid "handling of unknown attributes not defined in the schema."
msgstr ""

#: of qiskit.validation.BaseSchema:10
msgid "class used to instantiate the instance. The"
msgstr ""

#: of qiskit.validation.BaseSchema qiskit.validation.BaseSchema:12
msgid "type"
msgstr ""

#: ../../api/qiskit.validation.BaseSchema.rst:10
msgid "Attributes Summary"
msgstr ""

#: ../../api/qiskit.validation.BaseSchema.rst:17:<autosummary>:1
msgid ":obj:`TYPE_MAPPING <qiskit.validation.BaseSchema.TYPE_MAPPING>`\\"
msgstr ""

#: ../../api/qiskit.validation.BaseSchema.rst:17:<autosummary>:1
msgid ":obj:`dict_class <qiskit.validation.BaseSchema.dict_class>`\\"
msgstr ""

#: ../../api/qiskit.validation.BaseSchema.rst:17:<autosummary>:1
msgid ":obj:`opts <qiskit.validation.BaseSchema.opts>`\\"
msgstr ""

#: ../../api/qiskit.validation.BaseSchema.rst:17:<autosummary>:1
msgid ":obj:`set_class <qiskit.validation.BaseSchema.set_class>`\\"
msgstr ""

#: ../../api/qiskit.validation.BaseSchema.rst:19
msgid "Methods Summary"
msgstr ""

#: ../../api/qiskit.validation.BaseSchema.rst:35:<autosummary>:1
msgid ":obj:`accessor <qiskit.validation.BaseSchema.accessor>`\\ \\(func\\)"
msgstr ""

#: ../../api/qiskit.validation.BaseSchema.rst:35:<autosummary>:1
msgid "Decorator that registers a function for pulling values from an object to serialize."
msgstr ""

#: ../../api/qiskit.validation.BaseSchema.rst:35:<autosummary>:1
msgid ":obj:`dump <qiskit.validation.BaseSchema.dump>`\\ \\(obj\\[\\, many\\, update\\_fields\\]\\)"
msgstr ""

#: ../../api/qiskit.validation.BaseSchema.rst:35:<autosummary>:1 of
#: qiskit.validation.BaseSchema.dump:1
msgid "Serialize an object to native Python data types according to this Schema's fields."
msgstr ""

#: ../../api/qiskit.validation.BaseSchema.rst:35:<autosummary>:1
msgid ":obj:`dump_additional_data <qiskit.validation.BaseSchema.dump_additional_data>`\\ \\(valid\\_data\\, many\\, ...\\)"
msgstr ""

#: ../../api/qiskit.validation.BaseSchema.rst:35:<autosummary>:1 of
#: qiskit.validation.BaseSchema.dump_additional_data:1
msgid "Include unknown fields after dumping."
msgstr ""

#: ../../api/qiskit.validation.BaseSchema.rst:35:<autosummary>:1
msgid ":obj:`dumps <qiskit.validation.BaseSchema.dumps>`\\ \\(obj\\[\\, many\\, update\\_fields\\]\\)"
msgstr ""

#: ../../api/qiskit.validation.BaseSchema.rst:35:<autosummary>:1 of
#: qiskit.validation.BaseSchema.dumps:1
msgid "Same as :meth:`dump`, except return a JSON-encoded string."
msgstr ""

#: ../../api/qiskit.validation.BaseSchema.rst:35:<autosummary>:1
msgid ":obj:`error_handler <qiskit.validation.BaseSchema.error_handler>`\\ \\(func\\)"
msgstr ""

#: ../../api/qiskit.validation.BaseSchema.rst:35:<autosummary>:1
msgid "Decorator that registers an error handler function for the schema."
msgstr ""

#: ../../api/qiskit.validation.BaseSchema.rst:35:<autosummary>:1
msgid ":obj:`get_attribute <qiskit.validation.BaseSchema.get_attribute>`\\ \\(attr\\, obj\\, default\\)"
msgstr ""

#: ../../api/qiskit.validation.BaseSchema.rst:35:<autosummary>:1 of
#: qiskit.validation.BaseSchema.get_attribute:1
msgid "Defines how to pull values from an object to serialize."
msgstr ""

#: ../../api/qiskit.validation.BaseSchema.rst:35:<autosummary>:1
msgid ":obj:`handle_error <qiskit.validation.BaseSchema.handle_error>`\\ \\(error\\, data\\)"
msgstr ""

#: ../../api/qiskit.validation.BaseSchema.rst:35:<autosummary>:1 of
#: qiskit.validation.BaseSchema.handle_error:1
msgid "Custom error handler function for the schema."
msgstr ""

#: ../../api/qiskit.validation.BaseSchema.rst:35:<autosummary>:1
msgid ":obj:`load <qiskit.validation.BaseSchema.load>`\\ \\(data\\[\\, many\\, partial\\]\\)"
msgstr ""

#: ../../api/qiskit.validation.BaseSchema.rst:35:<autosummary>:1 of
#: qiskit.validation.BaseSchema.load:1
msgid "Deserialize a data structure to an object defined by this Schema's fields and :meth:`make_object`."
msgstr ""

#: ../../api/qiskit.validation.BaseSchema.rst:35:<autosummary>:1
msgid ":obj:`load_additional_data <qiskit.validation.BaseSchema.load_additional_data>`\\ \\(valid\\_data\\, many\\, ...\\)"
msgstr ""

#: ../../api/qiskit.validation.BaseSchema.rst:35:<autosummary>:1 of
#: qiskit.validation.BaseSchema.load_additional_data:1
msgid "Include unknown fields after load."
msgstr ""

#: ../../api/qiskit.validation.BaseSchema.rst:35:<autosummary>:1
msgid ":obj:`loads <qiskit.validation.BaseSchema.loads>`\\ \\(json\\_data\\[\\, many\\]\\)"
msgstr ""

#: ../../api/qiskit.validation.BaseSchema.rst:35:<autosummary>:1 of
#: qiskit.validation.BaseSchema.loads:1
msgid "Same as :meth:`load`, except it takes a JSON string as input."
msgstr ""

#: ../../api/qiskit.validation.BaseSchema.rst:35:<autosummary>:1
msgid ":obj:`make_model <qiskit.validation.BaseSchema.make_model>`\\ \\(data\\)"
msgstr ""

#: ../../api/qiskit.validation.BaseSchema.rst:35:<autosummary>:1 of
#: qiskit.validation.BaseSchema.make_model:1
msgid "Make ``load`` return a ``model_cls`` instance instead of a dict."
msgstr ""

#: ../../api/qiskit.validation.BaseSchema.rst:35:<autosummary>:1
msgid ":obj:`on_bind_field <qiskit.validation.BaseSchema.on_bind_field>`\\ \\(field\\_name\\, field\\_obj\\)"
msgstr ""

#: ../../api/qiskit.validation.BaseSchema.rst:35:<autosummary>:1
msgid "Hook to modify a field when it is bound to the `Schema`."
msgstr ""

#: ../../api/qiskit.validation.BaseSchema.rst:35:<autosummary>:1
msgid ":obj:`validate <qiskit.validation.BaseSchema.validate>`\\ \\(data\\[\\, many\\, partial\\]\\)"
msgstr ""

#: ../../api/qiskit.validation.BaseSchema.rst:35:<autosummary>:1 of
#: qiskit.validation.BaseSchema.validate:1
msgid "Validate `data` against the schema, returning a dictionary of validation errors."
msgstr ""

#: ../../api/qiskit.validation.BaseSchema.rst:37
msgid "Attributes Documentation"
msgstr ""

#: ../../api/qiskit.validation.BaseSchema.rst:44
msgid "Methods Documentation"
msgstr ""

#: of qiskit.validation.BaseSchema.accessor:1
msgid "Decorator that registers a function for pulling values from an object to serialize. The function receives the :class:`Schema` instance, the ``key`` of the value to get, the ``obj`` to serialize, and an optional ``default`` value."
msgstr ""

#: of qiskit.validation.BaseSchema.accessor:6
#: qiskit.validation.BaseSchema.error_handler:20
msgid "Set the ``error_handler`` class Meta option instead."
msgstr ""

#: of qiskit.validation.BaseSchema.dump
#: qiskit.validation.BaseSchema.dump_additional_data
#: qiskit.validation.BaseSchema.dumps qiskit.validation.BaseSchema.handle_error
#: qiskit.validation.BaseSchema.load
#: qiskit.validation.BaseSchema.load_additional_data
#: qiskit.validation.BaseSchema.loads qiskit.validation.BaseSchema.validate
msgid "Parameters"
msgstr ""

#: of qiskit.validation.BaseSchema.dump:4 qiskit.validation.BaseSchema.dumps:3
msgid "The object to serialize."
msgstr ""

#: of qiskit.validation.BaseSchema.dump:5 qiskit.validation.BaseSchema.dumps:4
msgid "Whether to serialize `obj` as a collection. If `None`, the value for `self.many` is used."
msgstr ""

#: of qiskit.validation.BaseSchema.dump:7 qiskit.validation.BaseSchema.dumps:6
msgid "Whether to update the schema's field classes. Typically set to `True`, but may be `False` when serializing a homogenous collection. This parameter is used by `fields.Nested` to avoid multiple updates."
msgstr ""

#: of qiskit.validation.BaseSchema.dump
#: qiskit.validation.BaseSchema.dump_additional_data
#: qiskit.validation.BaseSchema.dumps qiskit.validation.BaseSchema.load
#: qiskit.validation.BaseSchema.load_additional_data
#: qiskit.validation.BaseSchema.loads qiskit.validation.BaseSchema.validate
msgid "Returns"
msgstr ""

#: of qiskit.validation.BaseSchema.dump:10 qiskit.validation.BaseSchema.dumps:9
#: qiskit.validation.BaseSchema.load:10 qiskit.validation.BaseSchema.loads:9
msgid "A tuple of the form (``data``, ``errors``)"
msgstr ""

#: of qiskit.validation.BaseSchema.dump
#: qiskit.validation.BaseSchema.dump_additional_data
#: qiskit.validation.BaseSchema.dumps qiskit.validation.BaseSchema.load
#: qiskit.validation.BaseSchema.load_additional_data
#: qiskit.validation.BaseSchema.loads qiskit.validation.BaseSchema.validate
msgid "Return type"
msgstr ""

#: of qiskit.validation.BaseSchema.dump:11
#: qiskit.validation.BaseSchema.dumps:10
msgid "`MarshalResult`, a `collections.namedtuple`"
msgstr ""

#: of qiskit.validation.BaseSchema.dump_additional_data:3
#: qiskit.validation.BaseSchema.load_additional_data:3
msgid "Unknown fields are added with no processing at all."
msgstr ""

#: of qiskit.validation.BaseSchema.dump_additional_data:5
msgid "data collected and returned by ``dump()``."
msgstr ""

#: of qiskit.validation.BaseSchema.dump_additional_data:7
#: qiskit.validation.BaseSchema.load_additional_data:7
msgid "if True, data and original_data are a list."
msgstr ""

#: of qiskit.validation.BaseSchema.dump_additional_data:9
msgid "object passed to ``dump()`` in the first place."
msgstr ""

#: of qiskit.validation.BaseSchema.dump_additional_data:13
#: qiskit.validation.BaseSchema.load_additional_data:13
msgid "the same ``valid_data`` extended with the unknown attributes."
msgstr ""

#: of qiskit.validation.BaseSchema.dump_additional_data:16
#: qiskit.validation.BaseSchema.load_additional_data:16
msgid "Inspired by https://github.com/marshmallow-code/marshmallow/pull/595."
msgstr ""

#: of qiskit.validation.BaseSchema.error_handler:1
msgid "Decorator that registers an error handler function for the schema. The function receives the :class:`Schema` instance, a dictionary of errors, and the serialized object (if serializing data) or data dictionary (if deserializing data) as arguments."
msgstr ""

#: of qiskit.validation.BaseSchema.error_handler:6
msgid "Example: ::"
msgstr ""

#: of qiskit.validation.BaseSchema.handle_error:3
msgid "The `ValidationError` raised during (de)serialization."
msgstr ""

#: of qiskit.validation.BaseSchema.handle_error:4
msgid "The original input data."
msgstr ""

#: of qiskit.validation.BaseSchema.load:4
msgid "The data to deserialize."
msgstr ""

#: of qiskit.validation.BaseSchema.load:5
msgid "Whether to deserialize `data` as a collection. If `None`, the value for `self.many` is used."
msgstr ""

#: of qiskit.validation.BaseSchema.load:7 qiskit.validation.BaseSchema.loads:6
#: qiskit.validation.BaseSchema.validate:7
msgid "Whether to ignore missing fields. If `None`, the value for `self.partial` is used. If its value is an iterable, only missing fields listed in that iterable will be ignored."
msgstr ""

#: of qiskit.validation.BaseSchema.load:11
#: qiskit.validation.BaseSchema.loads:10
msgid "`UnmarshalResult`, a `collections.namedtuple`"
msgstr ""

#: of qiskit.validation.BaseSchema.load_additional_data:5
msgid "validated data returned by ``load()``."
msgstr ""

#: of qiskit.validation.BaseSchema.load_additional_data:9
msgid "data passed to ``load()`` in the first place."
msgstr ""

#: of qiskit.validation.BaseSchema.loads:3
msgid "A JSON string of the data to deserialize."
msgstr ""

#: of qiskit.validation.BaseSchema.loads:4
msgid "Whether to deserialize `obj` as a collection. If `None`, the value for `self.many` is used."
msgstr ""

#: of qiskit.validation.BaseSchema.on_bind_field:1
msgid "Hook to modify a field when it is bound to the `Schema`. No-op by default."
msgstr ""

#: of qiskit.validation.BaseSchema.validate:4
msgid "The data to validate."
msgstr ""

#: of qiskit.validation.BaseSchema.validate:5
msgid "Whether to validate `data` as a collection. If `None`, the value for `self.many` is used."
msgstr ""

#: of qiskit.validation.BaseSchema.validate:10
msgid "A dictionary of validation errors."
msgstr ""

