msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-09 12:18+0000\n"
"PO-Revision-Date: 2020-05-09 12:48\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: Japanese\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Language: ja\n"
"X-Crowdin-File: /poBranch/docs/locale/en/LC_MESSAGES/development_strategy.po\n"
"Language: ja_JP\n"

#: ../../development_strategy.rst:2
msgid "Development Strategy"
msgstr "開発ストラテジー"

#: ../../development_strategy.rst:5
msgid "Roadmap"
msgstr "ロードマップ"

#: ../../development_strategy.rst:7
msgid "We are going to look out 12 months to establish a set of goals we want to work towards. When planning, we typically look at potential work from the perspective of the elements."
msgstr "目指す一連の目標をセットするとき、12ヶ月を見据えます。計画時、通常要素の視点から潜在的な作業を洗い出します。"

#: ../../development_strategy.rst:12
msgid "Qiskit Terra"
msgstr "Qiskit Terra"

#: ../../development_strategy.rst:14
msgid "In 2018 we worked on formalizing the backends and user flow in Qiskit Terra. The basic idea is as follows: the user designs a quantum circuit and then, through a set of transpiler passes, rewrites the circuit to run on different backends with different optimizations. We also introduced the concept of a *provider*, whose role is to supply backends for the user to run quantum circuits on. The provider API we have defined at version one supplies a set of schemas to verify that the provider and its backends are Terra-compatible."
msgstr "2018年、QiskitTerraのバックエンドとユーザー・フローの正式化に取り組みました。基本的なアイディアは以下の通りです。ユーザーは、まず量子回路をデザインし、次に一連のトランスパイラー・パスを通じ、異なるバックエンドで動作するよう異なる最適化を利用して回路を書き換えます。また、*プロバイダー*の概念を導入し、量子回路を走らせるバックエンドをユーザーに提供する役割を与えました。バージョン1で定義したプロバイダーAPIは、プロバイダーとそのバックエンドがTerra互換であるかを確認するためのスキーマを提供しています。"

#: ../../development_strategy.rst:22
msgid "In 2019, we have many extensions planned. These include:"
msgstr "2019年、以下の通り、多くの拡張が計画されています。"

#: ../../development_strategy.rst:24
msgid "**Add passes to the transpiler.** The goal here is to be more efficient in circuit depth as well as adding passes that find approximate circuits and resource estimations."
msgstr "**トランスパイラーへのパスを追加** : ここでのゴールは回路の深さをより効率的にすること、そして回路とリソースのおおよその見積もりを見つけるパスを追加することです。"

#: ../../development_strategy.rst:27
msgid "**Introduce a circuit foundry and circuit API.** This has the goal of making sure that a user can easily build complex circuits from operations. Some of these include adding controls and power to operations, and inserting unitary matrices directly."
msgstr "**回路ファウンドリと回路APIの導入** : このゴールは複雑な回路を簡単な操作で構築できるようにすることです。これには演算への制御とパワーの追加、ユニタリー行列の直接挿入などが含まれます。"

#: ../../development_strategy.rst:31
msgid "**Provide an API for OpenPulse.** Now that OpenPulse is defined, and the IBM Quantum provider can accept it, we plan to build out the pulse features. These will include a scheduler and tools for building experiments out of pulses. Also included will be tools for mapping between experiments with gates (QASM) to experiments with pulses."
msgstr ""

#: ../../development_strategy.rst:37
msgid "Qiskit Aer"
msgstr "Qiskit Aer"

#: ../../development_strategy.rst:39
msgid "The first release of Qiskit Aer was made available at the end of 2018. It included C++ implementations of QASM, statevector, and unitary simulators. These are the core to Qiskit Aer, and replace the simulators that existed in Terra. The QASM simulator includes a customizable general (Kraus) noise model, and all simulators include CPU parallelization through the OpenMP library."
msgstr ""

#: ../../development_strategy.rst:45
msgid "In 2019, Aer will be extended in many ways:"
msgstr "2019年、Aerは多くの拡張が予定されています。"

#: ../../development_strategy.rst:47
msgid "**Optimize simulators.** We are going to start profiling the simulators and work on making them faster. This will include automatic settings for backend configuration and OpenMP parallelization configuration based on the input Qobj and available hardware."
msgstr "**シミュレーターの最適化** : シミュレーターのプロファイリングを開始し、高速化に取り組みます。これは、入力Qobjと利用可能なハードウェアに基づいた、バックエンド構成とOpenMP並列化の構成の自動設定が含まれます。"

#: ../../development_strategy.rst:50
msgid "**Develop additional simulator backends.** We will include several approximate simulator backends that are more efficient for specific subclasses of circuits, such as the T-gate simulator, which works on Clifford and T gates (with low T-depth), and a stabilizer simulator,  which works just on Clifford gates."
msgstr "**追加のシミュレーター・バックエンドの開発** : 回路の特定のサブクラスに対しより効率的であるいくつかの近似シミュレーター・バックエンドが含まれます。例えば、CliffordとTゲート(低T深度)で動作するTゲート・シミュレーターや、Cliffordゲートだけで動作するスタビライザー・シミュレーターです。"

#: ../../development_strategy.rst:54
msgid "**Add noise approximation tools.** We plan to add noise approximation tools to mapping general (Kraus) noise models to approximate noise model that may be implemented on an approximate backends (for example only mixed Clifford and reset errors in the noise model)."
msgstr "**ノイズ近似ツールの追加** : 近似バックエンド上に実装されているかもしれないノイズ・モデルを近似するために、一般的な(Kraus)ノイズモデルをマップするノイズ近似ツール(例えば、Cliffordとリセットの混合エラーのみのノイズ・モデル)を追加する予定です 。"

#: ../../development_strategy.rst:59
msgid "Qiskit Ignis"
msgstr "Qiskit Ignis"

#: ../../development_strategy.rst:61
msgid "This year, we are going to release the first version of Qiskit Ignis. The goal of Ignis is to be a set of tools for characterization of errors, improving gates, and enhancing computation in the presence of noise. Examples of these tools include optimal control, dynamical decoupling, and error mitigation."
msgstr "今年、Qiskit Ignis の最初のバージョンをリリースする予定です。Ignisの目標は、エラーの性能評価や、ゲートの改良、ノイズの存在下での計算強化のためのツールを提供することです。ツール例としては、最適制御、動的デカップリング、エラー軽減が含まれます。"

#: ../../development_strategy.rst:67
msgid "In 2019, Ignis will include tools for:"
msgstr "2019年、Ignisは以下のツールを提供する予定です。"

#: ../../development_strategy.rst:69
msgid "quantum state/process tomography"
msgstr "量子状態/プロセス・トモグラフィ"

#: ../../development_strategy.rst:71
msgid "randomized benchmarking over different groups"
msgstr "異なるグループに対するランダム化ベンチマーキング"

#: ../../development_strategy.rst:73
msgid "optimal control (e.g., pulse shaping)"
msgstr "最適化制御 (例: パルス整形)"

#: ../../development_strategy.rst:75
msgid "dynamical decoupling"
msgstr "動的デカップリング"

#: ../../development_strategy.rst:77
msgid "circuit randomization"
msgstr "回路のランダム化"

#: ../../development_strategy.rst:79
msgid "error mitigation (to improve results for quantum chemistry experiments)"
msgstr "(量子化学実験の結果改善のための) エラー軽減"

#: ../../development_strategy.rst:82
msgid "Qiskit Aqua"
msgstr "Qiskit Aqua"

#: ../../development_strategy.rst:84
msgid "Aqua is an open-source library of quantum algorithms and applications, introduced in June 2018. As a library of quantum algorithms, Aqua comes with a rich set of quantum algorithms of general applicability—such as VQE, QAOA, Grover's Search, Amplitude Estimation and Phase Estimation—and domain-specific algorithms-such as the Support Vector Machine (SVM) Quantum Kernel and Variational algorithms, suitable for supervised learning.  In addition, Aqua includes algorithm-supporting components, such as optimizers, variational forms, oracles, Quantum Fourier Transforms, feature maps, multiclass classification extension algorithms, uncertainty problems, and random distributions. As a framework for quantum applications, Aqua provides support for Chemistry (released separately as the Qiskit Chemistry component), as well as Artificial Intelligence (AI), Optimization and Finance.  Aqua is extensible across multiple domains, and has been designed and structured as a framework that allows researchers to contribute their own implementations of new algorithms and algorithm-supporting components."
msgstr "Aquaは、2018年6月に導入された量子アルゴリズムとアプリケーションのオープンソース・ライブラリです。量子アルゴリズムのライブラリとして、Aquaには一般に適用可能な豊富な量子アルゴリズムのセット、例えば、VQE、QAOA、Grover検索、振幅推定と位相推定、などがあります。また、ドメイン固有のアルゴリズム、例えば教師あり学習に適したサポート・ベクター・マシン (Support Vector Machine, SVM) の量子カーネルや変分アルゴリズムもあります。さらに、Aquaはアルゴリズムをサポートする構成要素、例えば最適化、変分形式、オラクル、量子フーリエ変換、特徴量マップ、複数クラス分類拡張アルゴリズム、不確定性問題、ランダム分布なども含みます。量子アプリケーションのフレームワークとして、AquaはChemistry (Qiskit Chemistry構成要素として個別にリリース) や、AI (人工知能)、Optimization、Financeを提供します。Aquaは複数ドメインにわたって拡張可能であり、研究者が新しいアルゴリズムやアルゴリズムをサポートする構成要素を独自に実装することに貢献できるフレームワークとしてデザインおよび構造化されています。"

#: ../../development_strategy.rst:98
msgid "Over the course of 2019, we are planning to enrich Aqua as follows:"
msgstr "2019年を通じて、Aquaを以下のように強化する予定です。"

#: ../../development_strategy.rst:100
msgid "We will include several new quantum algorithms, such as Deutsch-Jozsa, Simon's, Bernstein-Vazirani, and Harrow, Hassidim, and Lloyd (HHL)."
msgstr "Deutsch-Jozsa、Simon's、Bernstein-Vazirani、そしてHarrowm、 Hassidim and Lloyd (HHL) といった、新しい量子アルゴリズムを提供する予定です。"

#: ../../development_strategy.rst:103
msgid "We will improve the performance of quantum algorithms on top of both simulators and real hardware."
msgstr "シミュレーターでも実機でも量子アルゴリズムのパフォーマンスを改良します。"

#: ../../development_strategy.rst:105
msgid "We will provide better support for execution on real quantum hardware."
msgstr "実機上の実行サポートを改善します。"

#: ../../development_strategy.rst:106
msgid "We will increase the set of problems supported by the AI, Optimization and Finance applications of Aqua."
msgstr "AquaのAI、Optimization、Financeアプリケーションを用いてサポートされる問題のセットを増加します。"

#: ../../development_strategy.rst:110
msgid "Summary"
msgstr "概要"

#: ../../development_strategy.rst:112
msgid "These are examples of just some of the work we will be focusing on in the next 12 months. We will continuously adapt the plan based on feedback. Please follow along and let us know what you think!"
msgstr "これらは次の１２ヶ月内にフォーカスしている作業のいくつかの例です。フィードバックに基づいて計画を継続的に調整する予定です。フォローをして、ぜひあなたのご意見を聞かせて下さい！"

#: ../../development_strategy.rst:119
msgid "Versioning"
msgstr "バージョン管理"

#: ../../development_strategy.rst:121
msgid "The Qiskit project is made up of several elements each performing different functionality. Each is independently useful and can be used on their own, but for convenience we provide this repository and meta-package to provide a single entrypoint to install all the elements at once. This is to simplify the install process and provide a unified interface to end users. However, because each Qiskit element has it's own releases and versions some care is needed when dealing with versions between the different repositories. This document outlines the guidelines for dealing with versions and releases of both Qiskit elements and the meta-package."
msgstr "Qiskit プロジェクトは、各自異なる機能を実行するいくつかの要素(エレメント) から構成されています。各要素は独立しており、それ単独で機能します。しかしながら、利便性のためにこのリポジトリを提供し、全ての要素を一度にインストールできるように、単一のエントリーポイントのメタパッケージとして提供しています。これによりインストールプロセスが簡略化され、エンドユーザーに統一されたインタフェースを提供できます。ただし、それぞれの Qiskit エレメントは独自のリリースとバージョンをもつため、異なるリポジトリ間でのバージョンを扱う際には注意が必要です。このドキュメントは Qiskit エレメントとメタパッケージ両者のバージョンとリリースの扱いのガイドラインを概略します。"

#: ../../development_strategy.rst:131
msgid "For the rest of this guide the standard Semantic Versioning nomenclature will be used of: ``Major.Minor.Patch`` to refer to the different components of a version number. For example, if the version number was ``0.7.1``, then the major version is ``0``, the minor version ``7``, and the patch version ``1``."
msgstr "このガイドの残りでは、異なるコンポーネントのバージョン番号を参照するのに、標準のセマンティック バージョニング (Semantic Versioning) 命名規則: ``Major.Minor.Patch`` を採用します。例えば、バージョン番号が ``0.7.1`` だった場合、メジャーバージョンは ``0`` 、マイナーバージョンが ``7``、そしてパッチバージョンが ``1`` です。"

#: ../../development_strategy.rst:138
msgid "Meta-package Version"
msgstr "メタパッケージバージョン"

#: ../../development_strategy.rst:140
msgid "The Qiskit meta-package version is an independent value that is determined by the releases of each of the elements being tracked. Each time we push a release to a tracked component (or add an element) the meta-package requirements, and version will need to be updated and a new release published. The timing should be coordinated with the release of elements to ensure that the meta-package releases track with element releases."
msgstr "Qiskitメタパッケージバージョンは、追跡対象の各要素のリリースによって決定される独立した値です。\n"
"リリースを追跡対象コンポーネントにプッシュする(または要素を追加する)たびに、メタパッケージの要件とバージョンを更新し、新しいリリースを公開する必要があります。 タイミングを要素のリリースと調整して、メタパッケージのリリースが要素のリリースを追跡するようにします。"

#: ../../development_strategy.rst:148
msgid "Adding New Elements"
msgstr "新しい要素(エレメント) の追加"

#: ../../development_strategy.rst:150
msgid "When a new Qiskit element is being added to the meta-package requirements, we need to increase the **Minor** version of the meta-package."
msgstr "新しいQiskit要素がメタパッケージ要件に追加されると、メタパッケージのマイナーバージョンを増やす必要があります。"

#: ../../development_strategy.rst:153
msgid "For example, if the meta-package is tracking 2 elements ``qiskit-aer`` and ``qiskit-terra`` and it's version is ``0.7.4``. Then we release a new element ``qiskit-ignis`` that we intend to also have included in the meta-package. When we add the new element to the meta-package we increase the version to ``0.8.0``."
msgstr "たとえば、メタパッケージが2つの要素 qiskit-aerとqiskit-terraを追跡しており、そのバージョンが 0.7.4であるとします。次に、メタパッケージに含める予定の新しい要素qiskit-ignisをリリースします。メタパッケージに新しい要素を追加するとき、バージョンを0.8.0に増やします。"

#: ../../development_strategy.rst:161
msgid "Patch Version Increases"
msgstr "パッチバージョンの増加"

#: ../../development_strategy.rst:163
msgid "When any Qiskit element that is being already tracked by the meta-package releases a patch version to fix bugs in a release we need also bump the requirement in the setup.py and then increase the patch version of the meta-package."
msgstr "メタパッケージによって既に追跡されているQiskit要素がバグを修正するためのパッチバージョンをリリースする際に、setup.pyの要件を上げてから、メタパッケージのパッチバージョンを増やす必要もあります。"

#: ../../development_strategy.rst:168
msgid "For example, if the meta-package is tracking 3 elements ``qiskit-terra==0.8.1``, ``qiskit-aer==0.2.1``, and ``qiskit-ignis==0.1.4`` with the current version ``0.9.6``. When qiskit-terra release a new patch version to fix a bug ``0.8.2`` the meta-package will also need to increase it's patch version and release, becoming ``0.9.7``."
msgstr "たとえば、メタパッケージが3つの要素 ``qiskit-terra == 0.8.1``、``qiskit-aer == 0.2.1`` および ``qiskit-ignis == 0.1.4`` を追跡していて 現在のバージョン ``0.9.6`` だとします。qiskit-terraがバグ ``0.8.2`` を修正するための新しいパッチバージョンをリリースすると、メタパッケージもパッチバージョンとリリースを増やして ``0.9.7`` にする必要があります。"

#: ../../development_strategy.rst:174
msgid "Additionally, there are occasionally packaging or other bugs in the meta-package itself that need to be fixed by pushing new releases. When those are encountered we should increase the patch version to differentiate it from the broken release. Do **not** delete the broken or any old releases from pypi in any situation, instead just increase the patch version and upload a new release."
msgstr "さらに、メタパッケージ自体には、新しいリリースをプッシュすることで修正する必要があるパッケージングまたはその他のバグが時々あります。 それらがおきたら、パッチバージョンを増やして、破損したリリースと区別する必要があります。 いかなる状況でもpypiから壊れたリリースや古いリリースを削除しないでください。代わりに、パッチバージョンを増やして新しいリリースをアップロードしてください。"

#: ../../development_strategy.rst:183
msgid "Minor Version Increases"
msgstr "マイナーバージョンの増加"

#: ../../development_strategy.rst:185
msgid "Besides adding a new element to the meta-package the minor version of the meta-package should also be increased anytime a minor version is increased in a tracked element."
msgstr "メタパッケージに新しい要素を追加することに加え、追跡される要素のマイナーバージョンが増加するたびに、メタパッケージのマイナーバージョンも増加させる必要があります。"

#: ../../development_strategy.rst:189
msgid "For example, if the meta-package is tracking 2 elements ``qiskit-terra==0.7.0`` and ``qiskit-aer==0.1.1`` and the current version is ``0.7.5``. When the ``qiskit-aer`` element releases ``0.2.0`` then we need to increase the meta-package version to be ``0.8.0`` to correspond to the new release."
msgstr "たとえば、メタパッケージが2つの要素 ``qiskit-terra == 0.7.0`` および ``qiskit-aer == 0.1.1`` を追跡しており、現在のバージョンが``0.7.5``であるとします。``qiskit-aer`` 要素が ``0.2.0`` をリリースしたら、新しいリリースに対応するためにメタパッケージのバージョンを ``0.8.0`` に増やす必要があります。"

#: ../../development_strategy.rst:196
msgid "Major Version Increases"
msgstr "メジャーバージョンの増加"

#: ../../development_strategy.rst:198
msgid "The major version is different from the other version number components. Unlike the other version number components, which are updated in lock step with each tracked element, the major version is only increased when all tracked versions are bumped (at least before ``1.0.0``). Right now all the elements still have a major version number component of ``0`` and until each tracked element in the meta-repository is marked as stable by bumping the major version to be ``>=1`` then the meta-package version should not increase the major version."
msgstr "メジャーバージョンは、他のバージョン番号コンポーネントとは異なります。追跡対象の各要素でロックステップで更新される他のバージョン番号コンポーネントとは異なり、メジャーバージョンは、すべての追跡対象バージョンがバンプされたとき（少なくとも``1.0.0`` の前に）にのみ増加します。現在、すべての要素のメジャーバージョン番号コンポーネントは `` 0`` であり、メジャーバージョンを ``>= 1`` にバンプしてメタリポジトリ内の各追跡要素が安定しているとマークされるまでは、 パッケージバージョンは、メジャーバージョンを増やすべきではありません。"

#: ../../development_strategy.rst:206
msgid "The behavior of the major version number component tracking after when all the elements are at >=1.0.0 has not been decided yet."
msgstr "すべての要素が> = 1.0.0になった後のメジャーバージョン番号コンポーネントトラッキングの動作はまだ決定されていません。"

#: ../../development_strategy.rst:211
msgid "Qiskit Element Requirement Tracking"
msgstr "Qiskit要素の要件の追跡"

#: ../../development_strategy.rst:213
msgid "While not strictly related to the meta-package and Qiskit versioning how we track the element versions in the meta-package's requirements list is important. Each element listed in the setup.py should be pinned to a single version. This means that each version of Qiskit should only install a single version for each tracked element. For example, the requirements list at any given point should look something like::"
msgstr "メタパッケージとQiskitのバージョン管理に厳密に関連しているわけではありませんが、メタパッケージの要件リストで要素のバージョンを追跡する方法が重要です。 setup.pyにリストされている各要素は、単一のバージョンに固定する必要があります。 つまり、Qiskitの各バージョンでは、追跡対象の要素ごとに1つのバージョンのみをインストールする必要があります。 たとえば、特定の時点での要件リストは次のようになります。"

#: ../../development_strategy.rst:225
msgid "This is to aid in debugging, but also make tracking the versions across multiple elements more transparent."
msgstr "これはデバッグに役立つだけでなく、複数の要素にわたるバージョンの追跡をより透明にするためでもあります。"

#: ../../development_strategy.rst:228
msgid "It is also worth pointing out that the order we install the elements is critically important too. ``pip`` does not have a real dependency solver which means the installation order matters. So if there are overlapping requirements versions between elements or dependencies between elements we need to ensure that the order in the requirements list installs everything as expected. If the order needs to be change for some install time incompatibility it should be noted clearly."
msgstr "また、要素をインストールする順序も非常に重要であることを指摘する価値があります。 `` pip``には実際の依存関係ソルバーがありません。つまり、インストールの順序が重要です。 したがって、要素間で要件バージョンが重複したり、要素間で依存関係がある場合、要件リストの順序ですべてが期待どおりにインストールされるようにする必要があります。 インストール時の非互換性のために順序を変更する必要がある場合は、明確に注意する必要があります。"

#: ../../development_strategy.rst:238
msgid "Module Status"
msgstr "モジュールの状態"

#: ../../development_strategy.rst:240
msgid "Qiskit is developing so fast that is it is hard to keep all different parts of the API supported for various versions. We do our best and we use the rule that for one minor version update, for example 0.6 to 0.7, we will keep the API working with a deprecated warning. Please don’t ignore these warnings. Sometimes there are cases in which this can’t be done and for these in the release history we will outline these in great details."
msgstr "Qiskitは非常に高速に開発されているため、さまざまなバージョンでサポートされるAPIの異なる部分をすべて維持するのは困難です。 最善を尽くし、1つのマイナーバージョンアップデート（例えば0.6から0.7へ）に対して、非推奨の警告を使用してAPIを動作させ続けるというルールを適用しています。なのでこれらの警告を無視しないでください。 ときにはルールが適用されない場合があります。これらについては、リリース履歴で詳細に説明します。"

#: ../../development_strategy.rst:248
msgid "This being said as we work towards Qiskit 1.0 there are some modules that have become stable and the table below is our attempt to label them"
msgstr "これは、Qiskit 1.0に向けて取り組んでいると言われていますが、安定したモジュールがいくつかあり、下の表はそれらにラベルを付ける試みです"

#: ../../development_strategy.rst:254
msgid "Modules"
msgstr "モジュール"

#: ../../development_strategy.rst:257
msgid "Name"
msgstr "名称"

#: ../../development_strategy.rst:257
msgid "status"
msgstr "ステータス"

#: ../../development_strategy.rst:257
msgid "Note"
msgstr "備考"

#: ../../development_strategy.rst:259
msgid "assembler"
msgstr "assembler"

#: ../../development_strategy.rst:259 ../../development_strategy.rst:263
#: ../../development_strategy.rst:277 ../../development_strategy.rst:289
#: ../../development_strategy.rst:295 ../../development_strategy.rst:297
#: ../../development_strategy.rst:299
msgid "stable"
msgstr "stable"

#: ../../development_strategy.rst:259 ../../development_strategy.rst:263
#: ../../development_strategy.rst:295 ../../development_strategy.rst:299
msgid "completed in version 0.9"
msgstr "completed in version 0.9"

#: ../../development_strategy.rst:261
msgid "circuit"
msgstr "circuit"

#: ../../development_strategy.rst:261 ../../development_strategy.rst:265
#: ../../development_strategy.rst:279 ../../development_strategy.rst:285
#: ../../development_strategy.rst:291 ../../development_strategy.rst:293
msgid "unstable"
msgstr "unstable"

#: ../../development_strategy.rst:263
msgid "compiler"
msgstr "compiler"

#: ../../development_strategy.rst:265
msgid "converters"
msgstr "converters"

#: ../../development_strategy.rst:267
msgid "dagcircuit"
msgstr "dagcircuit"

#: ../../development_strategy.rst:267 ../../development_strategy.rst:269
#: ../../development_strategy.rst:281 ../../development_strategy.rst:283
#: ../../development_strategy.rst:287
msgid "remove"
msgstr "remove"

#: ../../development_strategy.rst:267 ../../development_strategy.rst:269
msgid "will be part of circuits"
msgstr "will be part of circuits"

#: ../../development_strategy.rst:269
msgid "extensions"
msgstr "extensions"

#: ../../development_strategy.rst:271 ../../development_strategy.rst:275
msgid "ignis.characterization"
msgstr "ignis.characterization"

#: ../../development_strategy.rst:273
msgid "ignis.mitigation"
msgstr "ignis.mitigation"

#: ../../development_strategy.rst:277
msgid "providers"
msgstr "providers"

#: ../../development_strategy.rst:277 ../../development_strategy.rst:289
#: ../../development_strategy.rst:297
msgid "completed in version 0.7"
msgstr "completed in version 0.7"

#: ../../development_strategy.rst:279
msgid "pulse"
msgstr "pulse"

#: ../../development_strategy.rst:281
msgid "qasm"
msgstr "qasm"

#: ../../development_strategy.rst:281
msgid "passer location to be determined"
msgstr "passer location to be determined"

#: ../../development_strategy.rst:283
msgid "qobj"
msgstr "qobj"

#: ../../development_strategy.rst:283 ../../development_strategy.rst:287
msgid "moved into the provider"
msgstr "moved into the provider"

#: ../../development_strategy.rst:285
msgid "quantum_info"
msgstr "quantum_info"

#: ../../development_strategy.rst:287
msgid "result"
msgstr "result"

#: ../../development_strategy.rst:289
msgid "schemas"
msgstr "schemas"

#: ../../development_strategy.rst:291
msgid "tests"
msgstr "tests"

#: ../../development_strategy.rst:293
msgid "tools"
msgstr "tools"

#: ../../development_strategy.rst:293
msgid "various elements to be removed"
msgstr "various elements to be removed"

#: ../../development_strategy.rst:295
msgid "transpiler"
msgstr "transpiler"

#: ../../development_strategy.rst:297
msgid "validation"
msgstr "validation"

#: ../../development_strategy.rst:299
msgid "visualization"
msgstr "visualization"

#: ../../development_strategy.rst:303 ../../development_strategy.rst:339
msgid "Providers"
msgstr "プロバイダー"

#: ../../development_strategy.rst:305
msgid "There are three providers that come with the default installation of Qiskit"
msgstr "Qiskitをデフォルトでインストールすると、下記三つのプロバイダーが提供されます。"

#: ../../development_strategy.rst:308
msgid "Basic Aer Provider"
msgstr "Basic Aer Provider"

#: ../../development_strategy.rst:310
msgid "This provider simulates ideal quantum circuits and has three backends. As Aer becomes more stable and can work on any operating system this provider will be removed."
msgstr "当プロバイダーは三つのバックエンドを持ち、理想的な量子回路をシミュレーションします。今後Aerが安定化し、どのOSにも対応できるようになった際は、このプロバイダーは削除される予定です。"

#: ../../development_strategy.rst:315
msgid "Aer Provider"
msgstr "Aer Provider"

#: ../../development_strategy.rst:317
msgid "This is a more advance simulator that is written in C++. It runs faster than Basic Aer and also allows you to add noise to your circuits. This allow you to explore what happens to your circuits for realistic models of the experiments and design experiments that might be more resilient to the noise in today’s quantum computers."
msgstr "C++で書かれたより高度なシミュレーターです。Basic Aerと比べて実行処理が速く、量子回路にノイズを載せることも可能です。これにより今日の量子コンピューターのノイズに対して、現実的な実験モデルに基づく量子回路の振る舞いを探求できます。"

#: ../../development_strategy.rst:324
msgid "IBM Quantum Provider"
msgstr ""

#: ../../development_strategy.rst:326
msgid "This provider gives you access to real experiments. You will need an IBM Quantum Experience account to use it.  It also has an online HPC simulator that can be used. It is a hosted version of the Aer Provider."
msgstr ""

#: ../../development_strategy.rst:332
msgid "Community Extensions"
msgstr "コミュニティーによる拡張"

#: ../../development_strategy.rst:334
msgid "Qiskit has been designed with modularity in mind. It is extensible in many different ways; on the page, we highlight the ways in which the Qiskit community has engaged with Qiskit and developed extensions and packages on top of it."
msgstr "Qiskitはモジュール性を考慮した設計がされています。ここではQiskit コミュニティーとの協働で開発したエクステンションやパッケージ等、各種拡張に関するご紹介をします。"

#: ../../development_strategy.rst:341
msgid "The Qiskit base provider is an entity that provides access to a group of different backends (for example, backends available through IBM Quantum). It interacts with those backends to do many things: find out which ones are available, retrieve an instance of a particular backend, get backend properties and configurations, and handling running and working with jobs."
msgstr ""

#: ../../development_strategy.rst:348
msgid "Additional providers"
msgstr "追加のプロバイダー"

#: ../../development_strategy.rst:350
msgid "**Decision diagram-based quantum simulator**"
msgstr "**Decision diagram-based quantum simulator**"

#: ../../development_strategy.rst
msgid "- **Organization:** Johannes Kepler University, Linz, Austria (Alwin Zulehner and Robert Wille)"
msgstr "- **組織:** Johannes Kepler University, Linz, Austria (Alwin Zulehner and Robert Wille)"

#: ../../development_strategy.rst
msgid "- **Description:** A local provider which allows Qiskit to use decision diagram-based quantum simulation"
msgstr "- **概要:** Qiskitによるdecision diagram-based quantum simulationの利用を提供するローカル・プロバイダー"

#: ../../development_strategy.rst
msgid "- **Qiskit Version:** 0.7"
msgstr "- **Qiskit バージョン:** 0.7"

#: ../../development_strategy.rst
msgid "- **More info:**  `Webpage at JKU <http://iic.jku.at/eda/research/quantum_simulation>`__, `Medium Blog <https://medium.com/qiskit/classical-simulators-for-quantum-computers-4b994dad4fa2>`__ and `GitHub Repo <https://github.com/Qiskit/qiskit-jku-provider>`__"
msgstr ""

#: ../../development_strategy.rst:361
msgid "**Quantum Inspire**"
msgstr "**Quantum Inspire**"

#: ../../development_strategy.rst
msgid "- **Organization:** QuTech-Delft"
msgstr "- **組織:** QuTech-Delft"

#: ../../development_strategy.rst
msgid "- **Description:** A provider for the Quantum Inspire backend"
msgstr "- **概要:** Quantum Inspire バックエンドのプロバイダー"

#: ../../development_strategy.rst
msgid "- **More info:** `Medium Blog <https://medium.com/qiskit/quantum-inspire-and-qiskit-f1be608f8955>`__ and `GitHub <https://github.com/QuTech-Delft/quantuminspire>`__."
msgstr ""

#: ../../development_strategy.rst:371
msgid "Transpiler"
msgstr "トランスパイラー"

#: ../../development_strategy.rst:373
msgid "Circuit optimization is at the heart of making quantum computing feasible on actual hardware. A central component of Qiskit is the transpiler, which is a framework for manipulating quantum circuits according to certain transformations (known as transpiler passes). The transpiler enables users to create customized sets of passes, orchestrated by a pass manager, to transform the circuit according to the rules specified by the passes. In addition, the transpiler architecture is designed for modularity and extensibility, enabling Qiskit users to write their own passes, use them in the pass manager, and combine them with existing passes. In this way, the transpiler architecture opens up the door for research into aggressive optimization of quantum circuits."
msgstr "量子コンピューティングを実際のハードウェアで実現する鍵が量子回路の最適化です。Qiskitの主要コンポーネントはTranspilerで、特定の変換（Transpiler passes）に基づいて量子回路を操作するフレームワークです。Transpilerは、pass managerによって、ユーザーがカスタマイズされたパスを作成し、パスが指定したルールに基づいて回路を変換できるようにしたものです。加えて、Transpilerのアーキテクチャはモジュール性と拡張性を考慮して設計され、Qiskitユーザが各自のパスを設計し、pass managerで利用し、既存のパスと組み合わせられるようにしました。このように、Transpilerのアーキテクチャは量子回路のより積極的な最適化を可能にします。"

#: ../../development_strategy.rst:385
msgid "Additional passes"
msgstr "追加のパス"

#: ../../development_strategy.rst:387
msgid "**t|ket〉 optimization & routing pass**"
msgstr "**t|ket〉 optimization & routing pass**"

#: ../../development_strategy.rst
msgid "- **Organization:** Cambridge Quantum Computing"
msgstr "- **組織:** Cambridge Quantum Computing"

#: ../../development_strategy.rst
msgid "- **Description:** Transpiler pass for circuit optimization and mapping to backend using CQC's t|ket〉compiler."
msgstr "- **概要:** 回路の最適化とCQCの t|ket〉コンパイラーを活用したバックエンドへのマッピング。"

#: ../../development_strategy.rst
msgid "- **More info:** `Tutorial Notebook <https://github.com/Qiskit/qiskit-tutorials/blob/master/community/aqua/chemistry/QSE_pytket.ipynb>`__ and `GitHub <https://github.com/CQCL/pytket>`__."
msgstr ""

#: ../../development_strategy.rst:397
msgid "Tools"
msgstr "ツール"

#: ../../development_strategy.rst:399
msgid "Extending Qiskit with new tools and functionality is an important part of building a community. These tools can be new visualizations, slack integration, Jupyter extensions and much more."
msgstr ""

#: ../../development_strategy.rst:404
msgid "Additional Tools"
msgstr "追加のツール"

#: ../../development_strategy.rst:405
msgid "**OpenControls library**"
msgstr "**OpenControls library**"

#: ../../development_strategy.rst
msgid "- **Organization:** Q-CTRL"
msgstr "- **組織:** Q-CTRL"

#: ../../development_strategy.rst
msgid "- **Description:** Library of quantum control pulses derived from the open literature."
msgstr "- **概要:** 公開文献に基づく量子コントロール・パルスのライブラリ"

#: ../../development_strategy.rst
msgid "- **More info:**  `GitHub <https://github.com/qctrl/python-open-controls>`__ and `Q-CTRL website <https://q-ctrl.com/products/open-controls/>`__"
msgstr ""

