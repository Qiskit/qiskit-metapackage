msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-09-13 16:11+0000\n"
"PO-Revision-Date: 2019-09-16 14:53\n"
"Last-Translator: lzdanski\n"
"Language-Team: Japanese\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: crowdin.com\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Language: ja\n"
"X-Crowdin-File: /poBranch/docs/locale/en/LC_MESSAGES/api/qiskit.aqua.Operator.po\n"
"Language: ja_JP\n"

#: ../../api/qiskit.aqua.Operator.rst:2
msgid "Operator"
msgstr ""

#: of qiskit.aqua.Operator:1
msgid "Bases: :class:`object`"
msgstr ""

#: of qiskit.aqua.Operator:1
msgid "Operators relevant for quantum applications"
msgstr ""

#: of qiskit.aqua.Operator:5
msgid "For grouped paulis representation, all operations will always convert it to paulis and then convert it back. (It might be a performance issue.)"
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:10
msgid "Attributes Summary"
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:20:<autosummary>:1
msgid ":obj:`aer_paulis <qiskit.aqua.Operator.aer_paulis>`\\"
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:20:<autosummary>:1
msgid ":obj:`coloring <qiskit.aqua.Operator.coloring>`\\"
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:20:<autosummary>:1 of
#: qiskit.aqua.Operator.coloring:1
msgid "Getter of method of grouping paulis"
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:20:<autosummary>:1
msgid ":obj:`grouped_paulis <qiskit.aqua.Operator.grouped_paulis>`\\"
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:20:<autosummary>:1 of
#: qiskit.aqua.Operator.grouped_paulis:1
msgid "Getter of grouped Pauli list."
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:20:<autosummary>:1
msgid ":obj:`matrix <qiskit.aqua.Operator.matrix>`\\"
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:20:<autosummary>:1 of
#: qiskit.aqua.Operator.matrix:1
msgid "Getter of matrix; if matrix is diagonal, diagonal matrix is returned instead."
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:20:<autosummary>:1
msgid ":obj:`num_qubits <qiskit.aqua.Operator.num_qubits>`\\"
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:20:<autosummary>:1 of
#: qiskit.aqua.Operator.num_qubits:1
msgid "number of qubits required for the operator."
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:20:<autosummary>:1
msgid ":obj:`paulis <qiskit.aqua.Operator.paulis>`\\"
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:20:<autosummary>:1 of
#: qiskit.aqua.Operator.paulis:1
msgid "Getter of Pauli list."
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:20:<autosummary>:1
msgid ":obj:`representations <qiskit.aqua.Operator.representations>`\\"
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:20:<autosummary>:1 of
#: qiskit.aqua.Operator.representations:1
msgid "Return the available representations in the Operator."
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:22
msgid "Methods Summary"
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:59:<autosummary>:1
msgid ":obj:`chop <qiskit.aqua.Operator.chop>`\\ \\(\\[threshold\\]\\)"
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:59:<autosummary>:1
msgid "Eliminate the real and imagine part of coeff in each pauli by `threshold`."
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:59:<autosummary>:1
msgid ":obj:`construct_evaluation_circuit <qiskit.aqua.Operator.construct_evaluation_circuit>`\\ \\(operator\\_mode\\, ...\\)"
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:59:<autosummary>:1 of
#: qiskit.aqua.Operator.construct_evaluation_circuit:1
msgid "Construct the circuits for evaluation."
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:59:<autosummary>:1
msgid ":obj:`construct_evolution_circuit <qiskit.aqua.Operator.construct_evolution_circuit>`\\ \\(...\\[\\, ...\\]\\)"
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:59:<autosummary>:1 of
#: qiskit.aqua.Operator.construct_evolution_circuit:1
msgid "Construct the evolution circuit according to the supplied specification."
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:59:<autosummary>:1
msgid ":obj:`convert <qiskit.aqua.Operator.convert>`\\ \\(input\\_format\\, output\\_format\\[\\, force\\]\\)"
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:59:<autosummary>:1
msgid "A wrapper for conversion among all representations."
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:59:<autosummary>:1
msgid ":obj:`copy <qiskit.aqua.Operator.copy>`\\ \\(\\)"
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:59:<autosummary>:1 of
#: qiskit.aqua.Operator.copy:1
msgid "Get a copy of self."
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:59:<autosummary>:1
msgid ":obj:`disable_summarize_circuits <qiskit.aqua.Operator.disable_summarize_circuits>`\\ \\(\\)"
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:59:<autosummary>:1
msgid ":obj:`enable_summarize_circuits <qiskit.aqua.Operator.enable_summarize_circuits>`\\ \\(\\)"
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:59:<autosummary>:1
msgid ":obj:`eval <qiskit.aqua.Operator.eval>`\\ \\(operator\\_mode\\, input\\_circuit\\, backend\\)"
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:59:<autosummary>:1
msgid "Supporting three ways to evaluate the given circuits with the operator."
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:59:<autosummary>:1
msgid ":obj:`evaluate_with_result <qiskit.aqua.Operator.evaluate_with_result>`\\ \\(operator\\_mode\\, ...\\[\\, ...\\]\\)"
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:59:<autosummary>:1 of
#: qiskit.aqua.Operator.evaluate_with_result:1
msgid "Use the executed result with operator to get the evaluated value."
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:59:<autosummary>:1
msgid ":obj:`evolve <qiskit.aqua.Operator.evolve>`\\ \\(\\[state\\_in\\, evo\\_time\\, evo\\_mode\\, ...\\]\\)"
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:59:<autosummary>:1 of
#: qiskit.aqua.Operator.evolve:1
msgid "Carry out the eoh evolution for the operator under supplied specifications."
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:59:<autosummary>:1
msgid ":obj:`find_Z2_symmetries <qiskit.aqua.Operator.find_Z2_symmetries>`\\ \\(\\)"
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:59:<autosummary>:1 of
#: qiskit.aqua.Operator.find_Z2_symmetries:1
msgid "Finds Z2 Pauli-type symmetries of an Operator"
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:59:<autosummary>:1
msgid ":obj:`from_dict <qiskit.aqua.Operator.from_dict>`\\ \\(dictionary\\[\\, before\\_04\\]\\)"
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:59:<autosummary>:1
msgid ":obj:`from_file <qiskit.aqua.Operator.from_file>`\\ \\(file\\_name\\[\\, before\\_04\\]\\)"
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:59:<autosummary>:1
msgid ":obj:`get_flat_pauli_list <qiskit.aqua.Operator.get_flat_pauli_list>`\\ \\(\\)"
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:59:<autosummary>:1 of
#: qiskit.aqua.Operator.get_flat_pauli_list:1
msgid "Get the flat list of paulis"
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:59:<autosummary>:1
msgid ":obj:`is_empty <qiskit.aqua.Operator.is_empty>`\\ \\(\\)"
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:59:<autosummary>:1 of
#: qiskit.aqua.Operator.is_empty:1
msgid "Check Operator is empty or not."
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:59:<autosummary>:1
msgid ":obj:`kernel_F2 <qiskit.aqua.Operator.kernel_F2>`\\ \\(matrix\\_in\\)"
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:59:<autosummary>:1 of
#: qiskit.aqua.Operator.kernel_F2:1
msgid "Computes the kernel of a binary matrix on the binary finite field"
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:59:<autosummary>:1
msgid ":obj:`load_from_dict <qiskit.aqua.Operator.load_from_dict>`\\ \\(dictionary\\[\\, before\\_04\\]\\)"
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:59:<autosummary>:1
msgid "Load paulis in a dict to construct an Operator,         the dict must be represented as follows: label and coeff (real and imag)."
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:59:<autosummary>:1
msgid ":obj:`load_from_file <qiskit.aqua.Operator.load_from_file>`\\ \\(file\\_name\\[\\, before\\_04\\]\\)"
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:59:<autosummary>:1 of
#: qiskit.aqua.Operator.load_from_file:1
msgid "Load paulis in a file to construct an Operator."
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:59:<autosummary>:1
msgid ":obj:`print_operators <qiskit.aqua.Operator.print_operators>`\\ \\(\\[print\\_format\\]\\)"
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:59:<autosummary>:1 of
#: qiskit.aqua.Operator.print_operators:1
msgid "Print out the paulis in the selected representation."
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:59:<autosummary>:1
msgid ":obj:`qubit_tapering <qiskit.aqua.Operator.qubit_tapering>`\\ \\(operator\\, cliffords\\, sq\\_list\\, ...\\)"
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:59:<autosummary>:1
msgid "Builds an Operator which has a number of qubits tapered off, based on a block-diagonal Operator built using a list of cliffords."
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:59:<autosummary>:1
msgid ":obj:`row_echelon_F2 <qiskit.aqua.Operator.row_echelon_F2>`\\ \\(matrix\\_in\\)"
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:59:<autosummary>:1 of
#: qiskit.aqua.Operator.row_echelon_F2:1
msgid "Computes the row Echelon form of a binary matrix on the binary finite field"
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:59:<autosummary>:1
msgid ":obj:`save_to_dict <qiskit.aqua.Operator.save_to_dict>`\\ \\(\\)"
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:59:<autosummary>:1 of
#: qiskit.aqua.Operator.save_to_dict:1
msgid "Save operator to a dict in pauli representation."
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:59:<autosummary>:1
msgid ":obj:`save_to_file <qiskit.aqua.Operator.save_to_file>`\\ \\(file\\_name\\)"
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:59:<autosummary>:1 of
#: qiskit.aqua.Operator.save_to_file:1
msgid "Save operator to a file in pauli representation."
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:59:<autosummary>:1
msgid ":obj:`scaling_coeff <qiskit.aqua.Operator.scaling_coeff>`\\ \\(scaling\\_factor\\)"
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:59:<autosummary>:1 of
#: qiskit.aqua.Operator.scaling_coeff:1
msgid "Constant scale the coefficient in an operator."
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:59:<autosummary>:1
msgid ":obj:`to_dict <qiskit.aqua.Operator.to_dict>`\\ \\(\\)"
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:59:<autosummary>:1
msgid ":obj:`to_file <qiskit.aqua.Operator.to_file>`\\ \\(file\\_name\\)"
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:59:<autosummary>:1
msgid ":obj:`to_grouped_paulis <qiskit.aqua.Operator.to_grouped_paulis>`\\ \\(\\)"
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:59:<autosummary>:1
msgid ":obj:`to_matrix <qiskit.aqua.Operator.to_matrix>`\\ \\(\\)"
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:59:<autosummary>:1
msgid ":obj:`to_matrix_operator <qiskit.aqua.Operator.to_matrix_operator>`\\ \\(\\)"
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:59:<autosummary>:1
msgid ":obj:`to_paulis <qiskit.aqua.Operator.to_paulis>`\\ \\(\\)"
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:59:<autosummary>:1
msgid ":obj:`to_tpb_grouped_weighted_pauli_operator <qiskit.aqua.Operator.to_tpb_grouped_weighted_pauli_operator>`\\ \\(\\)"
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:59:<autosummary>:1
msgid ":obj:`to_weighted_pauli_operator <qiskit.aqua.Operator.to_weighted_pauli_operator>`\\ \\(\\)"
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:59:<autosummary>:1
msgid ":obj:`two_qubit_reduced_operator <qiskit.aqua.Operator.two_qubit_reduced_operator>`\\ \\(m\\[\\, threshold\\]\\)"
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:59:<autosummary>:1 of
#: qiskit.aqua.Operator.two_qubit_reduced_operator:1
msgid "Eliminates the central and last qubit in a list of Pauli that has diagonal operators (Z,I) at those positions"
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:59:<autosummary>:1
msgid ":obj:`zeros_coeff_elimination <qiskit.aqua.Operator.zeros_coeff_elimination>`\\ \\(\\)"
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:59:<autosummary>:1 of
#: qiskit.aqua.Operator.zeros_coeff_elimination:1
msgid "Elinminate paulis or grouped paulis whose coefficients are zeros."
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:61
msgid "Attributes Documentation"
msgstr ""

#: of qiskit.aqua.Operator.construct_evaluation_circuit
#: qiskit.aqua.Operator.construct_evolution_circuit qiskit.aqua.Operator.eval
#: qiskit.aqua.Operator.evaluate_with_result qiskit.aqua.Operator.evolve
#: qiskit.aqua.Operator.find_Z2_symmetries
#: qiskit.aqua.Operator.get_flat_pauli_list qiskit.aqua.Operator.is_empty
#: qiskit.aqua.Operator.kernel_F2 qiskit.aqua.Operator.load_from_dict
#: qiskit.aqua.Operator.load_from_file qiskit.aqua.Operator.num_qubits
#: qiskit.aqua.Operator.print_operators qiskit.aqua.Operator.qubit_tapering
#: qiskit.aqua.Operator.representations qiskit.aqua.Operator.row_echelon_F2
#: qiskit.aqua.Operator.save_to_dict
#: qiskit.aqua.Operator.two_qubit_reduced_operator
msgid "Returns"
msgstr ""

#: of qiskit.aqua.Operator.num_qubits:3
msgid "number of qubits"
msgstr ""

#: of qiskit.aqua.Operator.construct_evaluation_circuit
#: qiskit.aqua.Operator.construct_evolution_circuit qiskit.aqua.Operator.eval
#: qiskit.aqua.Operator.evaluate_with_result
#: qiskit.aqua.Operator.find_Z2_symmetries
#: qiskit.aqua.Operator.get_flat_pauli_list qiskit.aqua.Operator.is_empty
#: qiskit.aqua.Operator.kernel_F2 qiskit.aqua.Operator.load_from_dict
#: qiskit.aqua.Operator.load_from_file qiskit.aqua.Operator.num_qubits
#: qiskit.aqua.Operator.print_operators qiskit.aqua.Operator.qubit_tapering
#: qiskit.aqua.Operator.representations qiskit.aqua.Operator.row_echelon_F2
#: qiskit.aqua.Operator.save_to_dict
#: qiskit.aqua.Operator.two_qubit_reduced_operator
msgid "Return type"
msgstr ""

#: of qiskit.aqua.Operator.representations:3
msgid "available representations ([str])"
msgstr ""

#: ../../api/qiskit.aqua.Operator.rst:71
msgid "Methods Documentation"
msgstr ""

#: of qiskit.aqua.Operator.chop:1
msgid "Eliminate the real and imagine part of coeff in each pauli by `threshold`. If pauli's coeff is less then `threshold` in both real and imagine parts, the pauli is removed. To align the internal representations, all available representations are chopped. The chopped result is stored back to original property. Note: if coeff is real-only, the imag part is skipped."
msgstr ""

#: of qiskit.aqua.Operator.chop
#: qiskit.aqua.Operator.construct_evaluation_circuit
#: qiskit.aqua.Operator.construct_evolution_circuit
#: qiskit.aqua.Operator.convert qiskit.aqua.Operator.eval
#: qiskit.aqua.Operator.evaluate_with_result qiskit.aqua.Operator.evolve
#: qiskit.aqua.Operator.kernel_F2 qiskit.aqua.Operator.load_from_file
#: qiskit.aqua.Operator.print_operators qiskit.aqua.Operator.qubit_tapering
#: qiskit.aqua.Operator.row_echelon_F2 qiskit.aqua.Operator.save_to_file
#: qiskit.aqua.Operator.scaling_coeff
#: qiskit.aqua.Operator.two_qubit_reduced_operator
msgid "Parameters"
msgstr ""

#: of qiskit.aqua.Operator.chop:7
msgid "threshold chops the paulis"
msgstr ""

#: of qiskit.aqua.Operator.construct_evaluation_circuit:3
#: qiskit.aqua.Operator.eval:6 qiskit.aqua.Operator.evaluate_with_result:3
msgid "representation of operator, including paulis, grouped_paulis and matrix"
msgstr ""

#: of qiskit.aqua.Operator.construct_evaluation_circuit:5
#: qiskit.aqua.Operator.eval:8
msgid "the quantum circuit."
msgstr ""

#: of qiskit.aqua.Operator.construct_evaluation_circuit:7
#: qiskit.aqua.Operator.eval:10 qiskit.aqua.Operator.evaluate_with_result:7
msgid "backend selection for quantum machine."
msgstr ""

#: of qiskit.aqua.Operator.construct_evaluation_circuit:9
msgid "the quantum register associated with the input_circuit"
msgstr ""

#: of qiskit.aqua.Operator.construct_evaluation_circuit:11
msgid "the classical register associated with the input_circuit"
msgstr ""

#: of qiskit.aqua.Operator.construct_evaluation_circuit:13
#: qiskit.aqua.Operator.evaluate_with_result:11
msgid "if aer_provider is used, we can do faster evaluation for pauli mode on statevector simualtion"
msgstr ""

#: of qiskit.aqua.Operator.construct_evaluation_circuit:17
msgid "the circuits for evaluation."
msgstr ""

#: of qiskit.aqua.Operator.construct_evaluation_circuit
#: qiskit.aqua.Operator.convert qiskit.aqua.Operator.print_operators
msgid "Raises"
msgstr ""

#: of qiskit.aqua.Operator.construct_evaluation_circuit:20
msgid "Can not find quantum register with `q` as the name and do not provide     quantum register explicitly"
msgstr ""

#: of qiskit.aqua.Operator.construct_evaluation_circuit:21
msgid "The provided qr is not in the input_circuit"
msgstr ""

#: of qiskit.aqua.Operator.construct_evolution_circuit:3
msgid "The list of pauli terms corresponding to a single time slice to be evolved"
msgstr ""

#: of qiskit.aqua.Operator.construct_evolution_circuit:5
#: qiskit.aqua.Operator.evolve:4
msgid "The evolution time"
msgstr ""

#: of qiskit.aqua.Operator.construct_evolution_circuit:7
#: qiskit.aqua.Operator.evolve:9
msgid "The number of time slices for the expansion"
msgstr ""

#: of qiskit.aqua.Operator.construct_evolution_circuit:9
msgid "The Qiskit QuantumRegister corresponding to the qubits of the system"
msgstr ""

#: of qiskit.aqua.Operator.construct_evolution_circuit:11
msgid "The optional Qiskit QuantumRegister corresponding to the control qubits for the state_registers of the system"
msgstr ""

#: of qiskit.aqua.Operator.construct_evolution_circuit:14
msgid "The index of the qubit of the control ancillary_registers to use"
msgstr ""

#: of qiskit.aqua.Operator.construct_evolution_circuit:16
msgid "The power to which the unitary operator is to be raised"
msgstr ""

#: of qiskit.aqua.Operator.construct_evolution_circuit:18
msgid "boolean flag for indicating only using basis gates when building circuit."
msgstr ""

#: of qiskit.aqua.Operator.construct_evolution_circuit:20
msgid "boolean flag for indicating using shallow qc.data reference repetition for slicing"
msgstr ""

#: of qiskit.aqua.Operator.construct_evolution_circuit:23
msgid "The Qiskit QuantumCircuit corresponding to specified evolution."
msgstr ""

#: of qiskit.aqua.Operator.convert:1
msgid "A wrapper for conversion among all representations. Note that, if the output target is already there, it will skip the conversion. The result is stored back into its property directly."
msgstr ""

#: of qiskit.aqua.Operator.convert:5
msgid "case-insensitive input format, should be one of \"paulis\", \"grouped_paulis\", \"matrix\""
msgstr ""

#: of qiskit.aqua.Operator.convert:8
msgid "case-insensitive output format, should be one of \"paulis\", \"grouped_paulis\", \"matrix\""
msgstr ""

#: of qiskit.aqua.Operator.convert:11
msgid "convert to targeted format regardless its present."
msgstr ""

#: of qiskit.aqua.Operator.convert:14
msgid "if the unsupported output_format is specified."
msgstr ""

#: of qiskit.aqua.Operator.eval:1
msgid "Supporting three ways to evaluate the given circuits with the operator. 1. If `input_circuit` is a numpy.ndarray, it will directly perform inner product with the operator. 2. If `backend` is a statevector simulator, use quantum backend to get statevector            and then evaluate with the operator. 3. Other cases: it use with quanutm backend (simulator or real quantum machine),            to obtain the mean and standard deviation of measured results."
msgstr ""

#: of qiskit.aqua.Operator.eval:12
msgid "configuration for backend"
msgstr ""

#: of qiskit.aqua.Operator.eval:14
msgid "configuration for compilation"
msgstr ""

#: of qiskit.aqua.Operator.eval:16
msgid "configuration for running a circuit"
msgstr ""

#: of qiskit.aqua.Operator.eval:18
msgid "the setting to retrieve results from quantum backend, including timeout and wait."
msgstr ""

#: of qiskit.aqua.Operator.eval:23
msgid "mean and standard deviation of avg"
msgstr ""

#: of qiskit.aqua.Operator.evaluate_with_result:5
msgid "the quantum circuits."
msgstr ""

#: of qiskit.aqua.Operator.evaluate_with_result:9
msgid "the result from the backend."
msgstr ""

#: of qiskit.aqua.Operator.evaluate_with_result:15
msgid "the mean value float: the standard deviation"
msgstr ""

#: of qiskit.aqua.Operator.evolve:3
msgid "The initial state for the evolution"
msgstr ""

#: of qiskit.aqua.Operator.evolve:6
msgid "The mode under which the evolution is carried out. Currently only support 'matrix' or 'circuit'"
msgstr ""

#: of qiskit.aqua.Operator.evolve:11
msgid "The QuantumRegister to build the QuantumCircuit off of"
msgstr ""

#: of qiskit.aqua.Operator.evolve:13
msgid "The mode under which the expansion is to be done. Currently support 'trotter', which follows the expansion as discussed in http://science.sciencemag.org/content/273/5278/1073, and 'suzuki', which corresponds to the discussion in https://arxiv.org/pdf/quant-ph/0508139.pdf"
msgstr ""

#: of qiskit.aqua.Operator.evolve:19
msgid "The order for suzuki expansion"
msgstr ""

#: of qiskit.aqua.Operator.evolve:22
msgid "Depending on the evo_mode specified, either return the matrix vector multiplication result or the constructed QuantumCircuit."
msgstr ""

#: of qiskit.aqua.Operator.find_Z2_symmetries:3
msgid "the list of Pauli objects representing the Z2 symmetries [Pauli]: the list of single - qubit Pauli objects to construct the Cliffors operators [Operators]: the list of Clifford unitaries to block diagonalize Operator [int]: the list of support of the single-qubit Pauli objects used to build the clifford operators"
msgstr ""

#: of qiskit.aqua.Operator.get_flat_pauli_list:3
msgid "The list of pauli terms"
msgstr ""

#: of qiskit.aqua.Operator.is_empty:3
msgid "is empty?"
msgstr ""

#: of qiskit.aqua.Operator.kernel_F2:3 qiskit.aqua.Operator.row_echelon_F2:4
msgid "binary matrix"
msgstr ""

#: of qiskit.aqua.Operator.kernel_F2:6
msgid "the list of kernel vectors"
msgstr ""

#: of qiskit.aqua.Operator.load_from_dict:1
msgid "Load paulis in a dict to construct an Operator,         the dict must be represented as follows: label and coeff (real and imag).         E.g.:            {'paulis':                [                    {'label': 'IIII',                     'coeff': {'real': -0.33562957575267038, 'imag': 0.0}},                    {'label': 'ZIII',                     'coeff': {'real': 0.28220597164664896, 'imag': 0.0}},                     ...                 ]             } :param dictionary: dictionary, which contains a list of Paulis and coefficients. :type dictionary: dict :param before_04: support the format < 0.4. :type before_04: bool"
msgstr ""

#: of qiskit.aqua.Operator.load_from_dict:7
#: qiskit.aqua.Operator.load_from_file:8
msgid "the loaded operator."
msgstr ""

#: of qiskit.aqua.Operator.load_from_file:3
msgid "path to the file, which contains a list of Paulis and coefficients."
msgstr ""

#: of qiskit.aqua.Operator.load_from_file:5
msgid "support the format < 0.4."
msgstr ""

#: of qiskit.aqua.Operator.print_operators:3
msgid "\"paulis\", \"grouped_paulis\", \"matrix\""
msgstr ""

#: of qiskit.aqua.Operator.print_operators:6
msgid "a formated operator."
msgstr ""

#: of qiskit.aqua.Operator.print_operators:9
msgid "if `print_format` is not supported."
msgstr ""

#: of qiskit.aqua.Operator.qubit_tapering:1
msgid "Builds an Operator which has a number of qubits tapered off, based on a block-diagonal Operator built using a list of cliffords. The block-diagonal subspace is an input parameter, set through the list tapering_values, which takes values +/- 1."
msgstr ""

#: of qiskit.aqua.Operator.qubit_tapering:6
msgid "the target operator to be tapered"
msgstr ""

#: of qiskit.aqua.Operator.qubit_tapering:8
msgid "list of unitary Clifford transformation"
msgstr ""

#: of qiskit.aqua.Operator.qubit_tapering:10
msgid "position of the single-qubit operators that anticommute"
msgstr ""

#: of qiskit.aqua.Operator.qubit_tapering:13
msgid "array of +/- 1 used to select the subspace. Length"
msgstr ""

#: of qiskit.aqua.Operator.qubit_tapering:17
msgid "the tapered operator, or empty operator if the `operator` is empty."
msgstr ""

#: of qiskit.aqua.Operator.row_echelon_F2:7
msgid "matrix_in in Echelon row form"
msgstr ""

#: of qiskit.aqua.Operator.save_to_dict:3
msgid "a dictionary contains an operator with pauli representation."
msgstr ""

#: of qiskit.aqua.Operator.save_to_file:3
msgid "path to the file"
msgstr ""

#: of qiskit.aqua.Operator.scaling_coeff:3
msgid "Note that: the behavior of scaling in paulis (grouped_paulis) might be different from matrix"
msgstr ""

#: of qiskit.aqua.Operator.scaling_coeff:5
msgid "the sacling factor"
msgstr ""

#: of qiskit.aqua.Operator.two_qubit_reduced_operator:4
msgid "Chemistry specific method: It can be used to taper two qubits in parity and binary-tree mapped fermionic Hamiltonians when the spin orbitals are ordered in two spin sectors, (block spin order) according to the number of particles in the system."
msgstr ""

#: of qiskit.aqua.Operator.two_qubit_reduced_operator:9
msgid "number of particles, if it is a list, the first number is alpha and the second number if beta."
msgstr ""

#: of qiskit.aqua.Operator.two_qubit_reduced_operator:12
msgid "threshold for Pauli simplification"
msgstr ""

#: of qiskit.aqua.Operator.two_qubit_reduced_operator:15
msgid "a new operator whose qubit number is reduced by 2."
msgstr ""

#: of qiskit.aqua.Operator.zeros_coeff_elimination:3
msgid "The difference from `_simplify_paulis` method is that, this method will not remove duplicated paulis."
msgstr ""

