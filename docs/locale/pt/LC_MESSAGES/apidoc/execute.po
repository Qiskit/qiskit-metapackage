msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-09-13 16:11+0000\n"
"PO-Revision-Date: 2019-09-16 15:21\n"
"Last-Translator: lzdanski\n"
"Language-Team: Portuguese\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Generator: crowdin.com\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Language: pt-PT\n"
"X-Crowdin-File: /poBranch/docs/locale/en/LC_MESSAGES/apidoc/execute.po\n"
"Language: pt_PT\n"

#: ../../apidoc/execute.rst:5
msgid "qiskit.execute"
msgstr ""

#: of qiskit.execute.execute:1
msgid "Execute a list of circuits or pulse schedules on a backend."
msgstr ""

#: of qiskit.execute.execute:3
msgid "The execution is asynchronous, and a handle to a job instance is returned."
msgstr ""

#: of qiskit.execute.execute
msgid "Parameters"
msgstr ""

#: of qiskit.execute.execute:5
msgid "Circuit(s) or pulse schedule(s) to execute"
msgstr ""

#: of qiskit.execute.execute:7
msgid "Backend to execute circuits on. Transpiler options are automatically grabbed from backend.configuration() and backend.properties(). If any other option is explicitly set (e.g. coupling_map), it will override the backend's."
msgstr ""

#: of qiskit.execute.execute:13
msgid "List of basis gate names to unroll to. e.g:     ['u1', 'u2', 'u3', 'cx'] If None, do not unroll."
msgstr ""

#: of qiskit.execute.execute:13
msgid "List of basis gate names to unroll to. e.g:"
msgstr ""

#: of qiskit.execute.execute:15
msgid "['u1', 'u2', 'u3', 'cx']"
msgstr ""

#: of qiskit.execute.execute:16
msgid "If None, do not unroll."
msgstr ""

#: of qiskit.execute.execute:18
msgid "Coupling map (perhaps custom) to target in mapping. Multiple formats are supported: a. CouplingMap instance  b. list     Must be given as an adjacency matrix, where each entry     specifies all two-qubit interactions supported by backend     e.g:         [[0, 1], [0, 3], [1, 2], [1, 5], [2, 5], [4, 1], [5, 3]]"
msgstr ""

#: of qiskit.execute.execute:18
msgid "Coupling map (perhaps custom) to target in mapping. Multiple formats are supported: a. CouplingMap instance"
msgstr ""

#: of qiskit.execute.execute:25 qiskit.execute.execute:57
msgid "list"
msgstr ""

#: of qiskit.execute.execute:23
msgid "Must be given as an adjacency matrix, where each entry specifies all two-qubit interactions supported by backend e.g:"
msgstr ""

#: of qiskit.execute.execute:26
msgid "[[0, 1], [0, 3], [1, 2], [1, 5], [2, 5], [4, 1], [5, 3]]"
msgstr ""

#: of qiskit.execute.execute:28
msgid "Properties returned by a backend, including information on gate errors, readout errors, qubit coherence times, etc. For a backend that provides this information, it can be obtained with: ``backend.properties()``"
msgstr ""

#: of qiskit.execute.execute:33
msgid "Initial position of virtual qubits on physical qubits. If this layout makes the circuit compatible with the coupling_map constraints, it will be used. The final layout is not guaranteed to be the same, as the transpiler may permute qubits through swaps or other means.  Multiple formats are supported: a. Layout instance  b. dict     virtual to physical:         {qr[0]: 0,          qr[1]: 3,          qr[2]: 5}      physical to virtual:         {0: qr[0],          3: qr[1],          5: qr[2]}  c. list     virtual to physical:         [0, 3, 5]  # virtual qubits are ordered (in addition to named)      physical to virtual:         [qr[0], None, None, qr[1], None, qr[2]]"
msgstr ""

#: of qiskit.execute.execute:33
msgid "Initial position of virtual qubits on physical qubits. If this layout makes the circuit compatible with the coupling_map constraints, it will be used. The final layout is not guaranteed to be the same, as the transpiler may permute qubits through swaps or other means."
msgstr ""

#: of qiskit.execute.execute:39
msgid "Multiple formats are supported: a. Layout instance"
msgstr ""

#: of qiskit.execute.execute:51
msgid "dict"
msgstr ""

#: of qiskit.execute.execute:46 qiskit.execute.execute:55
msgid "virtual to physical:"
msgstr ""

#: of qiskit.execute.execute:46
msgid "{qr[0]: 0,"
msgstr ""

#: of qiskit.execute.execute:45
msgid "qr[1]: 3, qr[2]: 5}"
msgstr ""

#: of qiskit.execute.execute:51 qiskit.execute.execute:57
msgid "physical to virtual:"
msgstr ""

#: of qiskit.execute.execute:51
msgid "{0: qr[0],"
msgstr ""

#: of qiskit.execute.execute:50
msgid "3: qr[1], 5: qr[2]}"
msgstr ""

#: of qiskit.execute.execute:55
msgid "[0, 3, 5]  # virtual qubits are ordered (in addition to named)"
msgstr ""

#: of qiskit.execute.execute:58
msgid "[qr[0], None, None, qr[1], None, qr[2]]"
msgstr ""

#: of qiskit.execute.execute:60
msgid "Sets random seed for the stochastic parts of the transpiler"
msgstr ""

#: of qiskit.execute.execute:62
msgid "How much optimization to perform on the circuits. Higher levels generate more optimized circuits, at the expense of longer transpilation time.     0: no optimization     1: light optimization     2: heavy optimization     3: even heavier optimization If None, level 1 will be chosen as default."
msgstr ""

#: of qiskit.execute.execute:62
msgid "How much optimization to perform on the circuits. Higher levels generate more optimized circuits, at the expense of longer transpilation time."
msgstr ""

#: of qiskit.execute.execute:65
msgid "0: no optimization 1: light optimization 2: heavy optimization 3: even heavier optimization"
msgstr ""

#: of qiskit.execute.execute:69
msgid "If None, level 1 will be chosen as default."
msgstr ""

#: of qiskit.execute.execute:71
msgid "The pass manager to use during transpilation. If this arg is present, auto-selection of pass manager based on the transpile options will be turned off and this pass manager will be used directly."
msgstr ""

#: of qiskit.execute.execute:75
msgid "String identifier to annotate the Qobj"
msgstr ""

#: of qiskit.execute.execute:77
msgid "User input that will be inserted in Qobj header, and will also be copied to the corresponding Result header. Headers do not affect the run."
msgstr ""

#: of qiskit.execute.execute:80
msgid "Number of repetitions of each circuit, for sampling. Default: 1024"
msgstr ""

#: of qiskit.execute.execute:82
msgid "If True, per-shot measurement bitstrings are returned as well (provided the backend supports it). For OpenPulse jobs, only measurement level 2 supports this option. Default: False"
msgstr ""

#: of qiskit.execute.execute:86
msgid "Maximum credits to spend on job. Default: 10"
msgstr ""

#: of qiskit.execute.execute:88
msgid "Random seed to control sampling, for when backend is a simulator"
msgstr ""

#: of qiskit.execute.execute:90
msgid "List of default qubit lo frequencies"
msgstr ""

#: of qiskit.execute.execute:92
msgid "List of default meas lo frequencies"
msgstr ""

#: of qiskit.execute.execute:94
msgid "Union[Dict[PulseChannel, float], LoConfig]): Experiment LO configurations"
msgstr ""

#: of qiskit.execute.execute:96
msgid "Set the appropriate level of the measurement output for pulse experiments."
msgstr ""

#: of qiskit.execute.execute:98
msgid "Level of measurement data for the backend to return For `meas_level` 0 and 1:     \"single\" returns information from every shot.     \"avg\" returns average measurement output (averaged over number of shots)."
msgstr ""

#: of qiskit.execute.execute:98
msgid "Level of measurement data for the backend to return For `meas_level` 0 and 1:"
msgstr ""

#: of qiskit.execute.execute:100
msgid "\"single\" returns information from every shot. \"avg\" returns average measurement output (averaged over number of shots)."
msgstr ""

#: of qiskit.execute.execute:103
msgid "Number of classical memory slots used in this job."
msgstr ""

#: of qiskit.execute.execute:105
msgid "Size of each memory slot if the output is Level 0."
msgstr ""

#: of qiskit.execute.execute:107
msgid "repetition time of the experiment in Î¼s. The delay between experiments will be rep_time. Must be from the list provided by the device."
msgstr ""

#: of qiskit.execute.execute:111
msgid "Value}]): List of Parameter bindings over which the set of experiments will be executed. Each list element (bind) should be of the form {Parameter1: value1, Parameter2: value2, ...}. All binds will be executed across all experiments, e.g. if parameter_binds is a length-n list, and there are m experiments, a total of m x n experiments will be run (one for each experiment/bind pair)."
msgstr ""

#: of qiskit.execute.execute:118
msgid "Extra arguments used to configure the run (e.g. for Aer configurable backends) Refer to the backend documentation for details on these arguments Note: for now, these keyword arguments will both be copied to the Qobj config, and passed to backend.run()"
msgstr ""

#: of qiskit.execute.execute
msgid "Returns"
msgstr ""

#: of qiskit.execute.execute:124
msgid "returns job instance derived from BaseJob"
msgstr ""

#: of qiskit.execute.execute
msgid "Return type"
msgstr ""

#: of qiskit.execute.execute
msgid "Raises"
msgstr ""

#: of qiskit.execute.execute:127
msgid "if the execution cannot be interpreted as either circuits or schedules"
msgstr ""

