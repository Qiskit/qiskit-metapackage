msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-03-12 12:01+0000\n"
"PO-Revision-Date: 2020-03-12 12:47\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: German\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Language: de\n"
"X-Crowdin-File: /poBranch/docs/locale/en/LC_MESSAGES/tutorials/advanced/Ignis/7_quantum_volume.po\n"
"Language: de_DE\n"

#: ../../tutorials/advanced/Ignis/7_quantum_volume.ipynb:9
#: ../../tutorials/advanced/Ignis/7_quantum_volume.ipynb:623
msgid "Quantum Volume"
msgstr ""

#: ../../tutorials/advanced/Ignis/7_quantum_volume.ipynb:11
msgid "**Last Updated:** August 6, 2019"
msgstr ""

#: ../../tutorials/advanced/Ignis/7_quantum_volume.ipynb:12
msgid "**Requires:** qiskit-terra 0.8, qiskit-ignis 0.1.1, qiskit-aer 0.2"
msgstr ""

#: ../../tutorials/advanced/Ignis/7_quantum_volume.ipynb:15
msgid "Introduction"
msgstr ""

#: ../../tutorials/advanced/Ignis/7_quantum_volume.ipynb:17
msgid "**Quantum Volume (QV)** is a method to verify device performance and a metric to quantify the computational power of a quantum device. The method is based on the paper \"Validating quantum computers using randomized model circuits\" (https://arxiv.org/abs/1811.12926)."
msgstr ""

#: ../../tutorials/advanced/Ignis/7_quantum_volume.ipynb:19
msgid "This notebook gives an example for how to use the ``ignis.verification.quantum_volume`` module. This particular example shows how to run up to depth 6 quantum volume circuits and will run them using the noisy Aer simulator."
msgstr ""

#: ../../tutorials/advanced/Ignis/7_quantum_volume.ipynb:46
msgid "Select the Parameters of the QV Run"
msgstr ""

#: ../../tutorials/advanced/Ignis/7_quantum_volume.ipynb:48
msgid "In this example we have 6 qubits Q0,Q1,Q3,Q5,Q7,Q10. We are going to look at subsets up to the full set."
msgstr ""

#: ../../tutorials/advanced/Ignis/7_quantum_volume.ipynb:66
msgid "Generate QV sequences"
msgstr ""

#: ../../tutorials/advanced/Ignis/7_quantum_volume.ipynb:68
msgid "We generate the quantum volume sequences. We start with a small example (so it doesn't take too long to run)."
msgstr ""

#: ../../tutorials/advanced/Ignis/7_quantum_volume.ipynb:92
msgid "As an example, we print the circuit corresponding to the first QV sequence. Note that the ideal circuits are run on the first n qubits (where n is the number of qubits in the subset)."
msgstr ""

#: ../../tutorials/advanced/Ignis/7_quantum_volume.ipynb:254
msgid "Simulate the ideal circuits"
msgstr ""

#: ../../tutorials/advanced/Ignis/7_quantum_volume.ipynb:261
msgid "The quantum volume method requires that we know the ideal output for each circuit, so use the statevector simulator in Aer to get the ideal result."
msgstr ""

#: ../../tutorials/advanced/Ignis/7_quantum_volume.ipynb:398
msgid "Next, load the ideal results into a quantum volume fitter:"
msgstr ""

#: ../../tutorials/advanced/Ignis/7_quantum_volume.ipynb:415
msgid "Define the noise model"
msgstr ""

#: ../../tutorials/advanced/Ignis/7_quantum_volume.ipynb:422
msgid "We define a noise model for the simulator. To simulate decay, we add depolarizing error probabilities to the CNOT and U gates."
msgstr ""

#: ../../tutorials/advanced/Ignis/7_quantum_volume.ipynb:444
msgid "Execute on Aer simulator"
msgstr ""

#: ../../tutorials/advanced/Ignis/7_quantum_volume.ipynb:446
msgid "We can execute the QV sequences either using a Qiskit Aer Simulator (with some noise model) or using an IBMQ provider, and obtain a list of results, ``result_list``."
msgstr ""

#: ../../tutorials/advanced/Ignis/7_quantum_volume.ipynb:583
msgid "Load the experimental data into the fitter. The data will keep accumulating if this is re-run (unless the fitter is re-instantiated)."
msgstr ""

#: ../../tutorials/advanced/Ignis/7_quantum_volume.ipynb:625
msgid "List statistics for each depth. For each depth list if the depth was successful or not and with what confidence interval. For a depth to be successful the confidence interval must be > 97.5%."
msgstr ""

